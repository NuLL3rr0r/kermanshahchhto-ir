//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace krchhto.krw {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ManagementSoap", Namespace="http://tempuri.org/")]
    public partial class Management : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MasterSetLegalOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterSetDaysLeftOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterFileUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterFileDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterFileDownloadIsFoundOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminPwSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminPwGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanAndRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback PreferencesGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback PreferencesSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesAllTreesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesChangeIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServerPageGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServerPageSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryCatchChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryImagesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryImagesDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactListCatchChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsSetArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsEditGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsEditGetImageNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsEditSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefAllTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileIsFoundOnServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileRenameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilesListServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportsPagesViewCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportsGalleriesViewCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FLVUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalendarAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalendarAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalendarGetBodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalendarEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalendarEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback WatermarkStatusGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback WatermarkStatusSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecRightClickGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecRightClickSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrollTextGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrollTextChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebsiteTitlesGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback WebsiteTitlesChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GoogleAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GoogleAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GoogleEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GoogleEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback LayoutWriteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Management() {
            this.Url = global::krchhto.Properties.Settings.Default.krchhto_krw_Management;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MasterSetLegalCompletedEventHandler MasterSetLegalCompleted;
        
        /// <remarks/>
        public event MasterSetDaysLeftCompletedEventHandler MasterSetDaysLeftCompleted;
        
        /// <remarks/>
        public event MasterFileUploadCompletedEventHandler MasterFileUploadCompleted;
        
        /// <remarks/>
        public event MasterFileDownloadCompletedEventHandler MasterFileDownloadCompleted;
        
        /// <remarks/>
        public event MasterFileDownloadIsFoundCompletedEventHandler MasterFileDownloadIsFoundCompleted;
        
        /// <remarks/>
        public event AdminPwSetCompletedEventHandler AdminPwSetCompleted;
        
        /// <remarks/>
        public event AdminPwGetCompletedEventHandler AdminPwGetCompleted;
        
        /// <remarks/>
        public event CleanAndRepairCompletedEventHandler CleanAndRepairCompleted;
        
        /// <remarks/>
        public event PreferencesGetCompletedEventHandler PreferencesGetCompleted;
        
        /// <remarks/>
        public event PreferencesSetCompletedEventHandler PreferencesSetCompleted;
        
        /// <remarks/>
        public event NodesAllTreesCompletedEventHandler NodesAllTreesCompleted;
        
        /// <remarks/>
        public event NodesAllCompletedEventHandler NodesAllCompleted;
        
        /// <remarks/>
        public event NodesAddCompletedEventHandler NodesAddCompleted;
        
        /// <remarks/>
        public event NodesEditCompletedEventHandler NodesEditCompleted;
        
        /// <remarks/>
        public event NodesEraseCompletedEventHandler NodesEraseCompleted;
        
        /// <remarks/>
        public event NodesChangeIndexCompletedEventHandler NodesChangeIndexCompleted;
        
        /// <remarks/>
        public event ServerPageGetCompletedEventHandler ServerPageGetCompleted;
        
        /// <remarks/>
        public event ServerPageSetCompletedEventHandler ServerPageSetCompleted;
        
        /// <remarks/>
        public event GalleryCatchChangesCompletedEventHandler GalleryCatchChangesCompleted;
        
        /// <remarks/>
        public event GalleryImagesListCompletedEventHandler GalleryImagesListCompleted;
        
        /// <remarks/>
        public event GalleryImagesDataCompletedEventHandler GalleryImagesDataCompleted;
        
        /// <remarks/>
        public event ContactListCompletedEventHandler ContactListCompleted;
        
        /// <remarks/>
        public event ContactListCatchChangesCompletedEventHandler ContactListCatchChangesCompleted;
        
        /// <remarks/>
        public event NewsAllCompletedEventHandler NewsAllCompleted;
        
        /// <remarks/>
        public event NewsAddCompletedEventHandler NewsAddCompleted;
        
        /// <remarks/>
        public event NewsSetArchiveCompletedEventHandler NewsSetArchiveCompleted;
        
        /// <remarks/>
        public event NewsEraseCompletedEventHandler NewsEraseCompleted;
        
        /// <remarks/>
        public event NewsEditGetCompletedEventHandler NewsEditGetCompleted;
        
        /// <remarks/>
        public event NewsEditGetImageNameCompletedEventHandler NewsEditGetImageNameCompleted;
        
        /// <remarks/>
        public event NewsEditSetCompletedEventHandler NewsEditSetCompleted;
        
        /// <remarks/>
        public event GalleryDefAllTablesCompletedEventHandler GalleryDefAllTablesCompleted;
        
        /// <remarks/>
        public event GalleryDefAllCompletedEventHandler GalleryDefAllCompleted;
        
        /// <remarks/>
        public event GalleryDefAddCompletedEventHandler GalleryDefAddCompleted;
        
        /// <remarks/>
        public event GalleryDefEditCompletedEventHandler GalleryDefEditCompleted;
        
        /// <remarks/>
        public event GalleryDefEraseCompletedEventHandler GalleryDefEraseCompleted;
        
        /// <remarks/>
        public event FileUploadCompletedEventHandler FileUploadCompleted;
        
        /// <remarks/>
        public event FileDownloadCompletedEventHandler FileDownloadCompleted;
        
        /// <remarks/>
        public event FileIsFoundOnServerCompletedEventHandler FileIsFoundOnServerCompleted;
        
        /// <remarks/>
        public event FileRenameCompletedEventHandler FileRenameCompleted;
        
        /// <remarks/>
        public event FileEraseCompletedEventHandler FileEraseCompleted;
        
        /// <remarks/>
        public event FilesListServerCompletedEventHandler FilesListServerCompleted;
        
        /// <remarks/>
        public event ReportsPagesViewCountCompletedEventHandler ReportsPagesViewCountCompleted;
        
        /// <remarks/>
        public event ReportsGalleriesViewCountCompletedEventHandler ReportsGalleriesViewCountCompleted;
        
        /// <remarks/>
        public event FLVUploadCompletedEventHandler FLVUploadCompleted;
        
        /// <remarks/>
        public event CalendarAllCompletedEventHandler CalendarAllCompleted;
        
        /// <remarks/>
        public event CalendarAddCompletedEventHandler CalendarAddCompleted;
        
        /// <remarks/>
        public event CalendarGetBodyCompletedEventHandler CalendarGetBodyCompleted;
        
        /// <remarks/>
        public event CalendarEditCompletedEventHandler CalendarEditCompleted;
        
        /// <remarks/>
        public event CalendarEraseCompletedEventHandler CalendarEraseCompleted;
        
        /// <remarks/>
        public event WatermarkStatusGetCompletedEventHandler WatermarkStatusGetCompleted;
        
        /// <remarks/>
        public event WatermarkStatusSetCompletedEventHandler WatermarkStatusSetCompleted;
        
        /// <remarks/>
        public event SpecRightClickGetCompletedEventHandler SpecRightClickGetCompleted;
        
        /// <remarks/>
        public event SpecRightClickSetCompletedEventHandler SpecRightClickSetCompleted;
        
        /// <remarks/>
        public event ScrollTextGetCompletedEventHandler ScrollTextGetCompleted;
        
        /// <remarks/>
        public event ScrollTextChangeCompletedEventHandler ScrollTextChangeCompleted;
        
        /// <remarks/>
        public event LogoUploadCompletedEventHandler LogoUploadCompleted;
        
        /// <remarks/>
        public event LogoDownloadCompletedEventHandler LogoDownloadCompleted;
        
        /// <remarks/>
        public event WebsiteTitlesGetCompletedEventHandler WebsiteTitlesGetCompleted;
        
        /// <remarks/>
        public event WebsiteTitlesChangeCompletedEventHandler WebsiteTitlesChangeCompleted;
        
        /// <remarks/>
        public event GoogleAllCompletedEventHandler GoogleAllCompleted;
        
        /// <remarks/>
        public event GoogleAddCompletedEventHandler GoogleAddCompleted;
        
        /// <remarks/>
        public event GoogleEditCompletedEventHandler GoogleEditCompleted;
        
        /// <remarks/>
        public event GoogleEraseCompletedEventHandler GoogleEraseCompleted;
        
        /// <remarks/>
        public event LayoutWriteCompletedEventHandler LayoutWriteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterSetLegal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MasterSetLegal(string oldLegal, string newLegal) {
            object[] results = this.Invoke("MasterSetLegal", new object[] {
                        oldLegal,
                        newLegal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MasterSetLegalAsync(string oldLegal, string newLegal) {
            this.MasterSetLegalAsync(oldLegal, newLegal, null);
        }
        
        /// <remarks/>
        public void MasterSetLegalAsync(string oldLegal, string newLegal, object userState) {
            if ((this.MasterSetLegalOperationCompleted == null)) {
                this.MasterSetLegalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterSetLegalOperationCompleted);
            }
            this.InvokeAsync("MasterSetLegal", new object[] {
                        oldLegal,
                        newLegal}, this.MasterSetLegalOperationCompleted, userState);
        }
        
        private void OnMasterSetLegalOperationCompleted(object arg) {
            if ((this.MasterSetLegalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterSetLegalCompleted(this, new MasterSetLegalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterSetDaysLeft", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MasterSetDaysLeft(string count, string legal) {
            object[] results = this.Invoke("MasterSetDaysLeft", new object[] {
                        count,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MasterSetDaysLeftAsync(string count, string legal) {
            this.MasterSetDaysLeftAsync(count, legal, null);
        }
        
        /// <remarks/>
        public void MasterSetDaysLeftAsync(string count, string legal, object userState) {
            if ((this.MasterSetDaysLeftOperationCompleted == null)) {
                this.MasterSetDaysLeftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterSetDaysLeftOperationCompleted);
            }
            this.InvokeAsync("MasterSetDaysLeft", new object[] {
                        count,
                        legal}, this.MasterSetDaysLeftOperationCompleted, userState);
        }
        
        private void OnMasterSetDaysLeftOperationCompleted(object arg) {
            if ((this.MasterSetDaysLeftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterSetDaysLeftCompleted(this, new MasterSetDaysLeftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterFileUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MasterFileUpload([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, string name, string legal) {
            object[] results = this.Invoke("MasterFileUpload", new object[] {
                        buffer,
                        name,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MasterFileUploadAsync(byte[] buffer, string name, string legal) {
            this.MasterFileUploadAsync(buffer, name, legal, null);
        }
        
        /// <remarks/>
        public void MasterFileUploadAsync(byte[] buffer, string name, string legal, object userState) {
            if ((this.MasterFileUploadOperationCompleted == null)) {
                this.MasterFileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterFileUploadOperationCompleted);
            }
            this.InvokeAsync("MasterFileUpload", new object[] {
                        buffer,
                        name,
                        legal}, this.MasterFileUploadOperationCompleted, userState);
        }
        
        private void OnMasterFileUploadOperationCompleted(object arg) {
            if ((this.MasterFileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterFileUploadCompleted(this, new MasterFileUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterFileDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] MasterFileDownload(string name, string legal) {
            object[] results = this.Invoke("MasterFileDownload", new object[] {
                        name,
                        legal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void MasterFileDownloadAsync(string name, string legal) {
            this.MasterFileDownloadAsync(name, legal, null);
        }
        
        /// <remarks/>
        public void MasterFileDownloadAsync(string name, string legal, object userState) {
            if ((this.MasterFileDownloadOperationCompleted == null)) {
                this.MasterFileDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterFileDownloadOperationCompleted);
            }
            this.InvokeAsync("MasterFileDownload", new object[] {
                        name,
                        legal}, this.MasterFileDownloadOperationCompleted, userState);
        }
        
        private void OnMasterFileDownloadOperationCompleted(object arg) {
            if ((this.MasterFileDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterFileDownloadCompleted(this, new MasterFileDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterFileDownloadIsFound", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MasterFileDownloadIsFound(string name, string legal) {
            object[] results = this.Invoke("MasterFileDownloadIsFound", new object[] {
                        name,
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MasterFileDownloadIsFoundAsync(string name, string legal) {
            this.MasterFileDownloadIsFoundAsync(name, legal, null);
        }
        
        /// <remarks/>
        public void MasterFileDownloadIsFoundAsync(string name, string legal, object userState) {
            if ((this.MasterFileDownloadIsFoundOperationCompleted == null)) {
                this.MasterFileDownloadIsFoundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterFileDownloadIsFoundOperationCompleted);
            }
            this.InvokeAsync("MasterFileDownloadIsFound", new object[] {
                        name,
                        legal}, this.MasterFileDownloadIsFoundOperationCompleted, userState);
        }
        
        private void OnMasterFileDownloadIsFoundOperationCompleted(object arg) {
            if ((this.MasterFileDownloadIsFoundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterFileDownloadIsFoundCompleted(this, new MasterFileDownloadIsFoundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminPwSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AdminPwSet(string pw, string npw, string legal) {
            object[] results = this.Invoke("AdminPwSet", new object[] {
                        pw,
                        npw,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AdminPwSetAsync(string pw, string npw, string legal) {
            this.AdminPwSetAsync(pw, npw, legal, null);
        }
        
        /// <remarks/>
        public void AdminPwSetAsync(string pw, string npw, string legal, object userState) {
            if ((this.AdminPwSetOperationCompleted == null)) {
                this.AdminPwSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminPwSetOperationCompleted);
            }
            this.InvokeAsync("AdminPwSet", new object[] {
                        pw,
                        npw,
                        legal}, this.AdminPwSetOperationCompleted, userState);
        }
        
        private void OnAdminPwSetOperationCompleted(object arg) {
            if ((this.AdminPwSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminPwSetCompleted(this, new AdminPwSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminPwGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AdminPwGet(string legal) {
            object[] results = this.Invoke("AdminPwGet", new object[] {
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AdminPwGetAsync(string legal) {
            this.AdminPwGetAsync(legal, null);
        }
        
        /// <remarks/>
        public void AdminPwGetAsync(string legal, object userState) {
            if ((this.AdminPwGetOperationCompleted == null)) {
                this.AdminPwGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminPwGetOperationCompleted);
            }
            this.InvokeAsync("AdminPwGet", new object[] {
                        legal}, this.AdminPwGetOperationCompleted, userState);
        }
        
        private void OnAdminPwGetOperationCompleted(object arg) {
            if ((this.AdminPwGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminPwGetCompleted(this, new AdminPwGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CleanAndRepair", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CleanAndRepair(string legal) {
            object[] results = this.Invoke("CleanAndRepair", new object[] {
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CleanAndRepairAsync(string legal) {
            this.CleanAndRepairAsync(legal, null);
        }
        
        /// <remarks/>
        public void CleanAndRepairAsync(string legal, object userState) {
            if ((this.CleanAndRepairOperationCompleted == null)) {
                this.CleanAndRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanAndRepairOperationCompleted);
            }
            this.InvokeAsync("CleanAndRepair", new object[] {
                        legal}, this.CleanAndRepairOperationCompleted, userState);
        }
        
        private void OnCleanAndRepairOperationCompleted(object arg) {
            if ((this.CleanAndRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanAndRepairCompleted(this, new CleanAndRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PreferencesGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable PreferencesGet(string legal) {
            object[] results = this.Invoke("PreferencesGet", new object[] {
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void PreferencesGetAsync(string legal) {
            this.PreferencesGetAsync(legal, null);
        }
        
        /// <remarks/>
        public void PreferencesGetAsync(string legal, object userState) {
            if ((this.PreferencesGetOperationCompleted == null)) {
                this.PreferencesGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreferencesGetOperationCompleted);
            }
            this.InvokeAsync("PreferencesGet", new object[] {
                        legal}, this.PreferencesGetOperationCompleted, userState);
        }
        
        private void OnPreferencesGetOperationCompleted(object arg) {
            if ((this.PreferencesGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreferencesGetCompleted(this, new PreferencesGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PreferencesSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PreferencesSet(string tag, string val, string legal) {
            object[] results = this.Invoke("PreferencesSet", new object[] {
                        tag,
                        val,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PreferencesSetAsync(string tag, string val, string legal) {
            this.PreferencesSetAsync(tag, val, legal, null);
        }
        
        /// <remarks/>
        public void PreferencesSetAsync(string tag, string val, string legal, object userState) {
            if ((this.PreferencesSetOperationCompleted == null)) {
                this.PreferencesSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreferencesSetOperationCompleted);
            }
            this.InvokeAsync("PreferencesSet", new object[] {
                        tag,
                        val,
                        legal}, this.PreferencesSetOperationCompleted, userState);
        }
        
        private void OnPreferencesSetOperationCompleted(object arg) {
            if ((this.PreferencesSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreferencesSetCompleted(this, new PreferencesSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesAllTrees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NodesAllTrees(string legal) {
            object[] results = this.Invoke("NodesAllTrees", new object[] {
                        legal});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NodesAllTreesAsync(string legal) {
            this.NodesAllTreesAsync(legal, null);
        }
        
        /// <remarks/>
        public void NodesAllTreesAsync(string legal, object userState) {
            if ((this.NodesAllTreesOperationCompleted == null)) {
                this.NodesAllTreesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesAllTreesOperationCompleted);
            }
            this.InvokeAsync("NodesAllTrees", new object[] {
                        legal}, this.NodesAllTreesOperationCompleted, userState);
        }
        
        private void OnNodesAllTreesOperationCompleted(object arg) {
            if ((this.NodesAllTreesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesAllTreesCompleted(this, new NodesAllTreesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable NodesAll(string tbl, string legal) {
            object[] results = this.Invoke("NodesAll", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void NodesAllAsync(string tbl, string legal) {
            this.NodesAllAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesAllAsync(string tbl, string legal, object userState) {
            if ((this.NodesAllOperationCompleted == null)) {
                this.NodesAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesAllOperationCompleted);
            }
            this.InvokeAsync("NodesAll", new object[] {
                        tbl,
                        legal}, this.NodesAllOperationCompleted, userState);
        }
        
        private void OnNodesAllOperationCompleted(object arg) {
            if ((this.NodesAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesAllCompleted(this, new NodesAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesAdd(string node, string parent, string fullPath, int zIndex, string tbl, string legal) {
            object[] results = this.Invoke("NodesAdd", new object[] {
                        node,
                        parent,
                        fullPath,
                        zIndex,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesAddAsync(string node, string parent, string fullPath, int zIndex, string tbl, string legal) {
            this.NodesAddAsync(node, parent, fullPath, zIndex, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesAddAsync(string node, string parent, string fullPath, int zIndex, string tbl, string legal, object userState) {
            if ((this.NodesAddOperationCompleted == null)) {
                this.NodesAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesAddOperationCompleted);
            }
            this.InvokeAsync("NodesAdd", new object[] {
                        node,
                        parent,
                        fullPath,
                        zIndex,
                        tbl,
                        legal}, this.NodesAddOperationCompleted, userState);
        }
        
        private void OnNodesAddOperationCompleted(object arg) {
            if ((this.NodesAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesAddCompleted(this, new NodesAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesEdit(string node, string newNode, string fullPath, string newFullPath, string tbl, string legal) {
            object[] results = this.Invoke("NodesEdit", new object[] {
                        node,
                        newNode,
                        fullPath,
                        newFullPath,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesEditAsync(string node, string newNode, string fullPath, string newFullPath, string tbl, string legal) {
            this.NodesEditAsync(node, newNode, fullPath, newFullPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesEditAsync(string node, string newNode, string fullPath, string newFullPath, string tbl, string legal, object userState) {
            if ((this.NodesEditOperationCompleted == null)) {
                this.NodesEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesEditOperationCompleted);
            }
            this.InvokeAsync("NodesEdit", new object[] {
                        node,
                        newNode,
                        fullPath,
                        newFullPath,
                        tbl,
                        legal}, this.NodesEditOperationCompleted, userState);
        }
        
        private void OnNodesEditOperationCompleted(object arg) {
            if ((this.NodesEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesEditCompleted(this, new NodesEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesErase(string fullPath, string parentPath, string tbl, string legal) {
            object[] results = this.Invoke("NodesErase", new object[] {
                        fullPath,
                        parentPath,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesEraseAsync(string fullPath, string parentPath, string tbl, string legal) {
            this.NodesEraseAsync(fullPath, parentPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesEraseAsync(string fullPath, string parentPath, string tbl, string legal, object userState) {
            if ((this.NodesEraseOperationCompleted == null)) {
                this.NodesEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesEraseOperationCompleted);
            }
            this.InvokeAsync("NodesErase", new object[] {
                        fullPath,
                        parentPath,
                        tbl,
                        legal}, this.NodesEraseOperationCompleted, userState);
        }
        
        private void OnNodesEraseOperationCompleted(object arg) {
            if ((this.NodesEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesEraseCompleted(this, new NodesEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesChangeIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesChangeIndex(string fullPath, int newIndex, string besidePath, int oldIndex, string tbl, string legal) {
            object[] results = this.Invoke("NodesChangeIndex", new object[] {
                        fullPath,
                        newIndex,
                        besidePath,
                        oldIndex,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesChangeIndexAsync(string fullPath, int newIndex, string besidePath, int oldIndex, string tbl, string legal) {
            this.NodesChangeIndexAsync(fullPath, newIndex, besidePath, oldIndex, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesChangeIndexAsync(string fullPath, int newIndex, string besidePath, int oldIndex, string tbl, string legal, object userState) {
            if ((this.NodesChangeIndexOperationCompleted == null)) {
                this.NodesChangeIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesChangeIndexOperationCompleted);
            }
            this.InvokeAsync("NodesChangeIndex", new object[] {
                        fullPath,
                        newIndex,
                        besidePath,
                        oldIndex,
                        tbl,
                        legal}, this.NodesChangeIndexOperationCompleted, userState);
        }
        
        private void OnNodesChangeIndexOperationCompleted(object arg) {
            if ((this.NodesChangeIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesChangeIndexCompleted(this, new NodesChangeIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServerPageGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ServerPageGet(string fullPath, string tbl, string legal) {
            object[] results = this.Invoke("ServerPageGet", new object[] {
                        fullPath,
                        tbl,
                        legal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ServerPageGetAsync(string fullPath, string tbl, string legal) {
            this.ServerPageGetAsync(fullPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void ServerPageGetAsync(string fullPath, string tbl, string legal, object userState) {
            if ((this.ServerPageGetOperationCompleted == null)) {
                this.ServerPageGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServerPageGetOperationCompleted);
            }
            this.InvokeAsync("ServerPageGet", new object[] {
                        fullPath,
                        tbl,
                        legal}, this.ServerPageGetOperationCompleted, userState);
        }
        
        private void OnServerPageGetOperationCompleted(object arg) {
            if ((this.ServerPageGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServerPageGetCompleted(this, new ServerPageGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServerPageSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ServerPageSet(string fullPath, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] zipContents, byte[][] buffer, string[] ext, string[] ph, string tbl, string legal) {
            object[] results = this.Invoke("ServerPageSet", new object[] {
                        fullPath,
                        zipContents,
                        buffer,
                        ext,
                        ph,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ServerPageSetAsync(string fullPath, byte[] zipContents, byte[][] buffer, string[] ext, string[] ph, string tbl, string legal) {
            this.ServerPageSetAsync(fullPath, zipContents, buffer, ext, ph, tbl, legal, null);
        }
        
        /// <remarks/>
        public void ServerPageSetAsync(string fullPath, byte[] zipContents, byte[][] buffer, string[] ext, string[] ph, string tbl, string legal, object userState) {
            if ((this.ServerPageSetOperationCompleted == null)) {
                this.ServerPageSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServerPageSetOperationCompleted);
            }
            this.InvokeAsync("ServerPageSet", new object[] {
                        fullPath,
                        zipContents,
                        buffer,
                        ext,
                        ph,
                        tbl,
                        legal}, this.ServerPageSetOperationCompleted, userState);
        }
        
        private void OnServerPageSetOperationCompleted(object arg) {
            if ((this.ServerPageSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServerPageSetCompleted(this, new ServerPageSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryCatchChanges", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GalleryCatchChanges(string target, byte[][] buffer, string[] ext, string[] erasedList, string legal) {
            object[] results = this.Invoke("GalleryCatchChanges", new object[] {
                        target,
                        buffer,
                        ext,
                        erasedList,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryCatchChangesAsync(string target, byte[][] buffer, string[] ext, string[] erasedList, string legal) {
            this.GalleryCatchChangesAsync(target, buffer, ext, erasedList, legal, null);
        }
        
        /// <remarks/>
        public void GalleryCatchChangesAsync(string target, byte[][] buffer, string[] ext, string[] erasedList, string legal, object userState) {
            if ((this.GalleryCatchChangesOperationCompleted == null)) {
                this.GalleryCatchChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryCatchChangesOperationCompleted);
            }
            this.InvokeAsync("GalleryCatchChanges", new object[] {
                        target,
                        buffer,
                        ext,
                        erasedList,
                        legal}, this.GalleryCatchChangesOperationCompleted, userState);
        }
        
        private void OnGalleryCatchChangesOperationCompleted(object arg) {
            if ((this.GalleryCatchChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryCatchChangesCompleted(this, new GalleryCatchChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryImagesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GalleryImagesList(string target, string legal) {
            object[] results = this.Invoke("GalleryImagesList", new object[] {
                        target,
                        legal});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GalleryImagesListAsync(string target, string legal) {
            this.GalleryImagesListAsync(target, legal, null);
        }
        
        /// <remarks/>
        public void GalleryImagesListAsync(string target, string legal, object userState) {
            if ((this.GalleryImagesListOperationCompleted == null)) {
                this.GalleryImagesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryImagesListOperationCompleted);
            }
            this.InvokeAsync("GalleryImagesList", new object[] {
                        target,
                        legal}, this.GalleryImagesListOperationCompleted, userState);
        }
        
        private void OnGalleryImagesListOperationCompleted(object arg) {
            if ((this.GalleryImagesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryImagesListCompleted(this, new GalleryImagesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryImagesData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] GalleryImagesData(string target, string legal) {
            object[] results = this.Invoke("GalleryImagesData", new object[] {
                        target,
                        legal});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void GalleryImagesDataAsync(string target, string legal) {
            this.GalleryImagesDataAsync(target, legal, null);
        }
        
        /// <remarks/>
        public void GalleryImagesDataAsync(string target, string legal, object userState) {
            if ((this.GalleryImagesDataOperationCompleted == null)) {
                this.GalleryImagesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryImagesDataOperationCompleted);
            }
            this.InvokeAsync("GalleryImagesData", new object[] {
                        target,
                        legal}, this.GalleryImagesDataOperationCompleted, userState);
        }
        
        private void OnGalleryImagesDataOperationCompleted(object arg) {
            if ((this.GalleryImagesDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryImagesDataCompleted(this, new GalleryImagesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContactList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ContactList(string tbl, string legal) {
            object[] results = this.Invoke("ContactList", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ContactListAsync(string tbl, string legal) {
            this.ContactListAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void ContactListAsync(string tbl, string legal, object userState) {
            if ((this.ContactListOperationCompleted == null)) {
                this.ContactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactListOperationCompleted);
            }
            this.InvokeAsync("ContactList", new object[] {
                        tbl,
                        legal}, this.ContactListOperationCompleted, userState);
        }
        
        private void OnContactListOperationCompleted(object arg) {
            if ((this.ContactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactListCompleted(this, new ContactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContactListCatchChanges", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ContactListCatchChanges(string tbl, System.Data.DataTable dtList, string legal) {
            object[] results = this.Invoke("ContactListCatchChanges", new object[] {
                        tbl,
                        dtList,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContactListCatchChangesAsync(string tbl, System.Data.DataTable dtList, string legal) {
            this.ContactListCatchChangesAsync(tbl, dtList, legal, null);
        }
        
        /// <remarks/>
        public void ContactListCatchChangesAsync(string tbl, System.Data.DataTable dtList, string legal, object userState) {
            if ((this.ContactListCatchChangesOperationCompleted == null)) {
                this.ContactListCatchChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactListCatchChangesOperationCompleted);
            }
            this.InvokeAsync("ContactListCatchChanges", new object[] {
                        tbl,
                        dtList,
                        legal}, this.ContactListCatchChangesOperationCompleted, userState);
        }
        
        private void OnContactListCatchChangesOperationCompleted(object arg) {
            if ((this.ContactListCatchChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactListCatchChangesCompleted(this, new ContactListCatchChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable NewsAll(string tbl, string legal) {
            object[] results = this.Invoke("NewsAll", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void NewsAllAsync(string tbl, string legal) {
            this.NewsAllAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void NewsAllAsync(string tbl, string legal, object userState) {
            if ((this.NewsAllOperationCompleted == null)) {
                this.NewsAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsAllOperationCompleted);
            }
            this.InvokeAsync("NewsAll", new object[] {
                        tbl,
                        legal}, this.NewsAllOperationCompleted, userState);
        }
        
        private void OnNewsAllOperationCompleted(object arg) {
            if ((this.NewsAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsAllCompleted(this, new NewsAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsAdd(string tbl, string title, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] zipContents, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, string ext, string legal) {
            object[] results = this.Invoke("NewsAdd", new object[] {
                        tbl,
                        title,
                        zipContents,
                        buffer,
                        ext,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsAddAsync(string tbl, string title, byte[] zipContents, byte[] buffer, string ext, string legal) {
            this.NewsAddAsync(tbl, title, zipContents, buffer, ext, legal, null);
        }
        
        /// <remarks/>
        public void NewsAddAsync(string tbl, string title, byte[] zipContents, byte[] buffer, string ext, string legal, object userState) {
            if ((this.NewsAddOperationCompleted == null)) {
                this.NewsAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsAddOperationCompleted);
            }
            this.InvokeAsync("NewsAdd", new object[] {
                        tbl,
                        title,
                        zipContents,
                        buffer,
                        ext,
                        legal}, this.NewsAddOperationCompleted, userState);
        }
        
        private void OnNewsAddOperationCompleted(object arg) {
            if ((this.NewsAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsAddCompleted(this, new NewsAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsSetArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsSetArchive(string tbl, int wh, string legal) {
            object[] results = this.Invoke("NewsSetArchive", new object[] {
                        tbl,
                        wh,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsSetArchiveAsync(string tbl, int wh, string legal) {
            this.NewsSetArchiveAsync(tbl, wh, legal, null);
        }
        
        /// <remarks/>
        public void NewsSetArchiveAsync(string tbl, int wh, string legal, object userState) {
            if ((this.NewsSetArchiveOperationCompleted == null)) {
                this.NewsSetArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsSetArchiveOperationCompleted);
            }
            this.InvokeAsync("NewsSetArchive", new object[] {
                        tbl,
                        wh,
                        legal}, this.NewsSetArchiveOperationCompleted, userState);
        }
        
        private void OnNewsSetArchiveOperationCompleted(object arg) {
            if ((this.NewsSetArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsSetArchiveCompleted(this, new NewsSetArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsErase(string tbl, int wh, string legal) {
            object[] results = this.Invoke("NewsErase", new object[] {
                        tbl,
                        wh,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsEraseAsync(string tbl, int wh, string legal) {
            this.NewsEraseAsync(tbl, wh, legal, null);
        }
        
        /// <remarks/>
        public void NewsEraseAsync(string tbl, int wh, string legal, object userState) {
            if ((this.NewsEraseOperationCompleted == null)) {
                this.NewsEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsEraseOperationCompleted);
            }
            this.InvokeAsync("NewsErase", new object[] {
                        tbl,
                        wh,
                        legal}, this.NewsEraseOperationCompleted, userState);
        }
        
        private void OnNewsEraseOperationCompleted(object arg) {
            if ((this.NewsEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsEraseCompleted(this, new NewsEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsEditGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] NewsEditGet(string tbl, int wh, string legal) {
            object[] results = this.Invoke("NewsEditGet", new object[] {
                        tbl,
                        wh,
                        legal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void NewsEditGetAsync(string tbl, int wh, string legal) {
            this.NewsEditGetAsync(tbl, wh, legal, null);
        }
        
        /// <remarks/>
        public void NewsEditGetAsync(string tbl, int wh, string legal, object userState) {
            if ((this.NewsEditGetOperationCompleted == null)) {
                this.NewsEditGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsEditGetOperationCompleted);
            }
            this.InvokeAsync("NewsEditGet", new object[] {
                        tbl,
                        wh,
                        legal}, this.NewsEditGetOperationCompleted, userState);
        }
        
        private void OnNewsEditGetOperationCompleted(object arg) {
            if ((this.NewsEditGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsEditGetCompleted(this, new NewsEditGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsEditGetImageName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsEditGetImageName(string tbl, int wh, string legal) {
            object[] results = this.Invoke("NewsEditGetImageName", new object[] {
                        tbl,
                        wh,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsEditGetImageNameAsync(string tbl, int wh, string legal) {
            this.NewsEditGetImageNameAsync(tbl, wh, legal, null);
        }
        
        /// <remarks/>
        public void NewsEditGetImageNameAsync(string tbl, int wh, string legal, object userState) {
            if ((this.NewsEditGetImageNameOperationCompleted == null)) {
                this.NewsEditGetImageNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsEditGetImageNameOperationCompleted);
            }
            this.InvokeAsync("NewsEditGetImageName", new object[] {
                        tbl,
                        wh,
                        legal}, this.NewsEditGetImageNameOperationCompleted, userState);
        }
        
        private void OnNewsEditGetImageNameOperationCompleted(object arg) {
            if ((this.NewsEditGetImageNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsEditGetImageNameCompleted(this, new NewsEditGetImageNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsEditSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsEditSet(string tbl, int wh, string title, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] zipContents, string imageMode, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, string ext, string legal) {
            object[] results = this.Invoke("NewsEditSet", new object[] {
                        tbl,
                        wh,
                        title,
                        zipContents,
                        imageMode,
                        buffer,
                        ext,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsEditSetAsync(string tbl, int wh, string title, byte[] zipContents, string imageMode, byte[] buffer, string ext, string legal) {
            this.NewsEditSetAsync(tbl, wh, title, zipContents, imageMode, buffer, ext, legal, null);
        }
        
        /// <remarks/>
        public void NewsEditSetAsync(string tbl, int wh, string title, byte[] zipContents, string imageMode, byte[] buffer, string ext, string legal, object userState) {
            if ((this.NewsEditSetOperationCompleted == null)) {
                this.NewsEditSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsEditSetOperationCompleted);
            }
            this.InvokeAsync("NewsEditSet", new object[] {
                        tbl,
                        wh,
                        title,
                        zipContents,
                        imageMode,
                        buffer,
                        ext,
                        legal}, this.NewsEditSetOperationCompleted, userState);
        }
        
        private void OnNewsEditSetOperationCompleted(object arg) {
            if ((this.NewsEditSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsEditSetCompleted(this, new NewsEditSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefAllTables", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GalleryDefAllTables(string legal) {
            object[] results = this.Invoke("GalleryDefAllTables", new object[] {
                        legal});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefAllTablesAsync(string legal) {
            this.GalleryDefAllTablesAsync(legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefAllTablesAsync(string legal, object userState) {
            if ((this.GalleryDefAllTablesOperationCompleted == null)) {
                this.GalleryDefAllTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefAllTablesOperationCompleted);
            }
            this.InvokeAsync("GalleryDefAllTables", new object[] {
                        legal}, this.GalleryDefAllTablesOperationCompleted, userState);
        }
        
        private void OnGalleryDefAllTablesOperationCompleted(object arg) {
            if ((this.GalleryDefAllTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefAllTablesCompleted(this, new GalleryDefAllTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GalleryDefAll(string tbl, string legal) {
            object[] results = this.Invoke("GalleryDefAll", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefAllAsync(string tbl, string legal) {
            this.GalleryDefAllAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefAllAsync(string tbl, string legal, object userState) {
            if ((this.GalleryDefAllOperationCompleted == null)) {
                this.GalleryDefAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefAllOperationCompleted);
            }
            this.InvokeAsync("GalleryDefAll", new object[] {
                        tbl,
                        legal}, this.GalleryDefAllOperationCompleted, userState);
        }
        
        private void OnGalleryDefAllOperationCompleted(object arg) {
            if ((this.GalleryDefAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefAllCompleted(this, new GalleryDefAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GalleryDefAdd(string id, string tbl, string legal) {
            object[] results = this.Invoke("GalleryDefAdd", new object[] {
                        id,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefAddAsync(string id, string tbl, string legal) {
            this.GalleryDefAddAsync(id, tbl, legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefAddAsync(string id, string tbl, string legal, object userState) {
            if ((this.GalleryDefAddOperationCompleted == null)) {
                this.GalleryDefAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefAddOperationCompleted);
            }
            this.InvokeAsync("GalleryDefAdd", new object[] {
                        id,
                        tbl,
                        legal}, this.GalleryDefAddOperationCompleted, userState);
        }
        
        private void OnGalleryDefAddOperationCompleted(object arg) {
            if ((this.GalleryDefAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefAddCompleted(this, new GalleryDefAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GalleryDefEdit(string id, string newID, string tbl, string legal) {
            object[] results = this.Invoke("GalleryDefEdit", new object[] {
                        id,
                        newID,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefEditAsync(string id, string newID, string tbl, string legal) {
            this.GalleryDefEditAsync(id, newID, tbl, legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefEditAsync(string id, string newID, string tbl, string legal, object userState) {
            if ((this.GalleryDefEditOperationCompleted == null)) {
                this.GalleryDefEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefEditOperationCompleted);
            }
            this.InvokeAsync("GalleryDefEdit", new object[] {
                        id,
                        newID,
                        tbl,
                        legal}, this.GalleryDefEditOperationCompleted, userState);
        }
        
        private void OnGalleryDefEditOperationCompleted(object arg) {
            if ((this.GalleryDefEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefEditCompleted(this, new GalleryDefEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GalleryDefErase(string id, string tbl, string legal) {
            object[] results = this.Invoke("GalleryDefErase", new object[] {
                        id,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefEraseAsync(string id, string tbl, string legal) {
            this.GalleryDefEraseAsync(id, tbl, legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefEraseAsync(string id, string tbl, string legal, object userState) {
            if ((this.GalleryDefEraseOperationCompleted == null)) {
                this.GalleryDefEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefEraseOperationCompleted);
            }
            this.InvokeAsync("GalleryDefErase", new object[] {
                        id,
                        tbl,
                        legal}, this.GalleryDefEraseOperationCompleted, userState);
        }
        
        private void OnGalleryDefEraseOperationCompleted(object arg) {
            if ((this.GalleryDefEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefEraseCompleted(this, new GalleryDefEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FileUpload(byte[][] buffer, string[] files, string legal) {
            object[] results = this.Invoke("FileUpload", new object[] {
                        buffer,
                        files,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FileUploadAsync(byte[][] buffer, string[] files, string legal) {
            this.FileUploadAsync(buffer, files, legal, null);
        }
        
        /// <remarks/>
        public void FileUploadAsync(byte[][] buffer, string[] files, string legal, object userState) {
            if ((this.FileUploadOperationCompleted == null)) {
                this.FileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileUploadOperationCompleted);
            }
            this.InvokeAsync("FileUpload", new object[] {
                        buffer,
                        files,
                        legal}, this.FileUploadOperationCompleted, userState);
        }
        
        private void OnFileUploadOperationCompleted(object arg) {
            if ((this.FileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileUploadCompleted(this, new FileUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] FileDownload(string[] files, string legal) {
            object[] results = this.Invoke("FileDownload", new object[] {
                        files,
                        legal});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void FileDownloadAsync(string[] files, string legal) {
            this.FileDownloadAsync(files, legal, null);
        }
        
        /// <remarks/>
        public void FileDownloadAsync(string[] files, string legal, object userState) {
            if ((this.FileDownloadOperationCompleted == null)) {
                this.FileDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileDownloadOperationCompleted);
            }
            this.InvokeAsync("FileDownload", new object[] {
                        files,
                        legal}, this.FileDownloadOperationCompleted, userState);
        }
        
        private void OnFileDownloadOperationCompleted(object arg) {
            if ((this.FileDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileDownloadCompleted(this, new FileDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileIsFoundOnServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FileIsFoundOnServer(string fileName, string legal) {
            object[] results = this.Invoke("FileIsFoundOnServer", new object[] {
                        fileName,
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FileIsFoundOnServerAsync(string fileName, string legal) {
            this.FileIsFoundOnServerAsync(fileName, legal, null);
        }
        
        /// <remarks/>
        public void FileIsFoundOnServerAsync(string fileName, string legal, object userState) {
            if ((this.FileIsFoundOnServerOperationCompleted == null)) {
                this.FileIsFoundOnServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileIsFoundOnServerOperationCompleted);
            }
            this.InvokeAsync("FileIsFoundOnServer", new object[] {
                        fileName,
                        legal}, this.FileIsFoundOnServerOperationCompleted, userState);
        }
        
        private void OnFileIsFoundOnServerOperationCompleted(object arg) {
            if ((this.FileIsFoundOnServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileIsFoundOnServerCompleted(this, new FileIsFoundOnServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileRename", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FileRename(string fileName, string newFileName, string legal) {
            object[] results = this.Invoke("FileRename", new object[] {
                        fileName,
                        newFileName,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FileRenameAsync(string fileName, string newFileName, string legal) {
            this.FileRenameAsync(fileName, newFileName, legal, null);
        }
        
        /// <remarks/>
        public void FileRenameAsync(string fileName, string newFileName, string legal, object userState) {
            if ((this.FileRenameOperationCompleted == null)) {
                this.FileRenameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileRenameOperationCompleted);
            }
            this.InvokeAsync("FileRename", new object[] {
                        fileName,
                        newFileName,
                        legal}, this.FileRenameOperationCompleted, userState);
        }
        
        private void OnFileRenameOperationCompleted(object arg) {
            if ((this.FileRenameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileRenameCompleted(this, new FileRenameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FileErase(string[] files, string legal) {
            object[] results = this.Invoke("FileErase", new object[] {
                        files,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FileEraseAsync(string[] files, string legal) {
            this.FileEraseAsync(files, legal, null);
        }
        
        /// <remarks/>
        public void FileEraseAsync(string[] files, string legal, object userState) {
            if ((this.FileEraseOperationCompleted == null)) {
                this.FileEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileEraseOperationCompleted);
            }
            this.InvokeAsync("FileErase", new object[] {
                        files,
                        legal}, this.FileEraseOperationCompleted, userState);
        }
        
        private void OnFileEraseOperationCompleted(object arg) {
            if ((this.FileEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileEraseCompleted(this, new FileEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FilesListServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] FilesListServer(string legal) {
            object[] results = this.Invoke("FilesListServer", new object[] {
                        legal});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void FilesListServerAsync(string legal) {
            this.FilesListServerAsync(legal, null);
        }
        
        /// <remarks/>
        public void FilesListServerAsync(string legal, object userState) {
            if ((this.FilesListServerOperationCompleted == null)) {
                this.FilesListServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilesListServerOperationCompleted);
            }
            this.InvokeAsync("FilesListServer", new object[] {
                        legal}, this.FilesListServerOperationCompleted, userState);
        }
        
        private void OnFilesListServerOperationCompleted(object arg) {
            if ((this.FilesListServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilesListServerCompleted(this, new FilesListServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportsPagesViewCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ReportsPagesViewCount(string tbl, string legal) {
            object[] results = this.Invoke("ReportsPagesViewCount", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReportsPagesViewCountAsync(string tbl, string legal) {
            this.ReportsPagesViewCountAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void ReportsPagesViewCountAsync(string tbl, string legal, object userState) {
            if ((this.ReportsPagesViewCountOperationCompleted == null)) {
                this.ReportsPagesViewCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportsPagesViewCountOperationCompleted);
            }
            this.InvokeAsync("ReportsPagesViewCount", new object[] {
                        tbl,
                        legal}, this.ReportsPagesViewCountOperationCompleted, userState);
        }
        
        private void OnReportsPagesViewCountOperationCompleted(object arg) {
            if ((this.ReportsPagesViewCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportsPagesViewCountCompleted(this, new ReportsPagesViewCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportsGalleriesViewCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ReportsGalleriesViewCount(string tbl, string legal) {
            object[] results = this.Invoke("ReportsGalleriesViewCount", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReportsGalleriesViewCountAsync(string tbl, string legal) {
            this.ReportsGalleriesViewCountAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void ReportsGalleriesViewCountAsync(string tbl, string legal, object userState) {
            if ((this.ReportsGalleriesViewCountOperationCompleted == null)) {
                this.ReportsGalleriesViewCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportsGalleriesViewCountOperationCompleted);
            }
            this.InvokeAsync("ReportsGalleriesViewCount", new object[] {
                        tbl,
                        legal}, this.ReportsGalleriesViewCountOperationCompleted, userState);
        }
        
        private void OnReportsGalleriesViewCountOperationCompleted(object arg) {
            if ((this.ReportsGalleriesViewCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportsGalleriesViewCountCompleted(this, new ReportsGalleriesViewCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FLVUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FLVUpload([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, string file, string legal) {
            object[] results = this.Invoke("FLVUpload", new object[] {
                        buffer,
                        file,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FLVUploadAsync(byte[] buffer, string file, string legal) {
            this.FLVUploadAsync(buffer, file, legal, null);
        }
        
        /// <remarks/>
        public void FLVUploadAsync(byte[] buffer, string file, string legal, object userState) {
            if ((this.FLVUploadOperationCompleted == null)) {
                this.FLVUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFLVUploadOperationCompleted);
            }
            this.InvokeAsync("FLVUpload", new object[] {
                        buffer,
                        file,
                        legal}, this.FLVUploadOperationCompleted, userState);
        }
        
        private void OnFLVUploadOperationCompleted(object arg) {
            if ((this.FLVUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FLVUploadCompleted(this, new FLVUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalendarAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CalendarAll(string tbl, string legal) {
            object[] results = this.Invoke("CalendarAll", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CalendarAllAsync(string tbl, string legal) {
            this.CalendarAllAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void CalendarAllAsync(string tbl, string legal, object userState) {
            if ((this.CalendarAllOperationCompleted == null)) {
                this.CalendarAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalendarAllOperationCompleted);
            }
            this.InvokeAsync("CalendarAll", new object[] {
                        tbl,
                        legal}, this.CalendarAllOperationCompleted, userState);
        }
        
        private void OnCalendarAllOperationCompleted(object arg) {
            if ((this.CalendarAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalendarAllCompleted(this, new CalendarAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalendarAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalendarAdd(string month, string day, string title, string body, string tbl, string legal) {
            object[] results = this.Invoke("CalendarAdd", new object[] {
                        month,
                        day,
                        title,
                        body,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalendarAddAsync(string month, string day, string title, string body, string tbl, string legal) {
            this.CalendarAddAsync(month, day, title, body, tbl, legal, null);
        }
        
        /// <remarks/>
        public void CalendarAddAsync(string month, string day, string title, string body, string tbl, string legal, object userState) {
            if ((this.CalendarAddOperationCompleted == null)) {
                this.CalendarAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalendarAddOperationCompleted);
            }
            this.InvokeAsync("CalendarAdd", new object[] {
                        month,
                        day,
                        title,
                        body,
                        tbl,
                        legal}, this.CalendarAddOperationCompleted, userState);
        }
        
        private void OnCalendarAddOperationCompleted(object arg) {
            if ((this.CalendarAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalendarAddCompleted(this, new CalendarAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalendarGetBody", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalendarGetBody(string title, string tbl, string legal) {
            object[] results = this.Invoke("CalendarGetBody", new object[] {
                        title,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalendarGetBodyAsync(string title, string tbl, string legal) {
            this.CalendarGetBodyAsync(title, tbl, legal, null);
        }
        
        /// <remarks/>
        public void CalendarGetBodyAsync(string title, string tbl, string legal, object userState) {
            if ((this.CalendarGetBodyOperationCompleted == null)) {
                this.CalendarGetBodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalendarGetBodyOperationCompleted);
            }
            this.InvokeAsync("CalendarGetBody", new object[] {
                        title,
                        tbl,
                        legal}, this.CalendarGetBodyOperationCompleted, userState);
        }
        
        private void OnCalendarGetBodyOperationCompleted(object arg) {
            if ((this.CalendarGetBodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalendarGetBodyCompleted(this, new CalendarGetBodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalendarEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalendarEdit(string month, string day, string title, string newTitle, string body, string tbl, string legal) {
            object[] results = this.Invoke("CalendarEdit", new object[] {
                        month,
                        day,
                        title,
                        newTitle,
                        body,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalendarEditAsync(string month, string day, string title, string newTitle, string body, string tbl, string legal) {
            this.CalendarEditAsync(month, day, title, newTitle, body, tbl, legal, null);
        }
        
        /// <remarks/>
        public void CalendarEditAsync(string month, string day, string title, string newTitle, string body, string tbl, string legal, object userState) {
            if ((this.CalendarEditOperationCompleted == null)) {
                this.CalendarEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalendarEditOperationCompleted);
            }
            this.InvokeAsync("CalendarEdit", new object[] {
                        month,
                        day,
                        title,
                        newTitle,
                        body,
                        tbl,
                        legal}, this.CalendarEditOperationCompleted, userState);
        }
        
        private void OnCalendarEditOperationCompleted(object arg) {
            if ((this.CalendarEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalendarEditCompleted(this, new CalendarEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalendarErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalendarErase(string title, string tbl, string legal) {
            object[] results = this.Invoke("CalendarErase", new object[] {
                        title,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalendarEraseAsync(string title, string tbl, string legal) {
            this.CalendarEraseAsync(title, tbl, legal, null);
        }
        
        /// <remarks/>
        public void CalendarEraseAsync(string title, string tbl, string legal, object userState) {
            if ((this.CalendarEraseOperationCompleted == null)) {
                this.CalendarEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalendarEraseOperationCompleted);
            }
            this.InvokeAsync("CalendarErase", new object[] {
                        title,
                        tbl,
                        legal}, this.CalendarEraseOperationCompleted, userState);
        }
        
        private void OnCalendarEraseOperationCompleted(object arg) {
            if ((this.CalendarEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalendarEraseCompleted(this, new CalendarEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WatermarkStatusGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WatermarkStatusGet(string legal) {
            object[] results = this.Invoke("WatermarkStatusGet", new object[] {
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WatermarkStatusGetAsync(string legal) {
            this.WatermarkStatusGetAsync(legal, null);
        }
        
        /// <remarks/>
        public void WatermarkStatusGetAsync(string legal, object userState) {
            if ((this.WatermarkStatusGetOperationCompleted == null)) {
                this.WatermarkStatusGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWatermarkStatusGetOperationCompleted);
            }
            this.InvokeAsync("WatermarkStatusGet", new object[] {
                        legal}, this.WatermarkStatusGetOperationCompleted, userState);
        }
        
        private void OnWatermarkStatusGetOperationCompleted(object arg) {
            if ((this.WatermarkStatusGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WatermarkStatusGetCompleted(this, new WatermarkStatusGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WatermarkStatusSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WatermarkStatusSet(bool watermark, string legal) {
            object[] results = this.Invoke("WatermarkStatusSet", new object[] {
                        watermark,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WatermarkStatusSetAsync(bool watermark, string legal) {
            this.WatermarkStatusSetAsync(watermark, legal, null);
        }
        
        /// <remarks/>
        public void WatermarkStatusSetAsync(bool watermark, string legal, object userState) {
            if ((this.WatermarkStatusSetOperationCompleted == null)) {
                this.WatermarkStatusSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWatermarkStatusSetOperationCompleted);
            }
            this.InvokeAsync("WatermarkStatusSet", new object[] {
                        watermark,
                        legal}, this.WatermarkStatusSetOperationCompleted, userState);
        }
        
        private void OnWatermarkStatusSetOperationCompleted(object arg) {
            if ((this.WatermarkStatusSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WatermarkStatusSetCompleted(this, new WatermarkStatusSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SpecRightClickGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SpecRightClickGet(string legal) {
            object[] results = this.Invoke("SpecRightClickGet", new object[] {
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SpecRightClickGetAsync(string legal) {
            this.SpecRightClickGetAsync(legal, null);
        }
        
        /// <remarks/>
        public void SpecRightClickGetAsync(string legal, object userState) {
            if ((this.SpecRightClickGetOperationCompleted == null)) {
                this.SpecRightClickGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecRightClickGetOperationCompleted);
            }
            this.InvokeAsync("SpecRightClickGet", new object[] {
                        legal}, this.SpecRightClickGetOperationCompleted, userState);
        }
        
        private void OnSpecRightClickGetOperationCompleted(object arg) {
            if ((this.SpecRightClickGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecRightClickGetCompleted(this, new SpecRightClickGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SpecRightClickSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SpecRightClickSet(bool rightclick, string legal) {
            object[] results = this.Invoke("SpecRightClickSet", new object[] {
                        rightclick,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SpecRightClickSetAsync(bool rightclick, string legal) {
            this.SpecRightClickSetAsync(rightclick, legal, null);
        }
        
        /// <remarks/>
        public void SpecRightClickSetAsync(bool rightclick, string legal, object userState) {
            if ((this.SpecRightClickSetOperationCompleted == null)) {
                this.SpecRightClickSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecRightClickSetOperationCompleted);
            }
            this.InvokeAsync("SpecRightClickSet", new object[] {
                        rightclick,
                        legal}, this.SpecRightClickSetOperationCompleted, userState);
        }
        
        private void OnSpecRightClickSetOperationCompleted(object arg) {
            if ((this.SpecRightClickSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecRightClickSetCompleted(this, new SpecRightClickSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScrollTextGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ScrollTextGet(string legal) {
            object[] results = this.Invoke("ScrollTextGet", new object[] {
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ScrollTextGetAsync(string legal) {
            this.ScrollTextGetAsync(legal, null);
        }
        
        /// <remarks/>
        public void ScrollTextGetAsync(string legal, object userState) {
            if ((this.ScrollTextGetOperationCompleted == null)) {
                this.ScrollTextGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrollTextGetOperationCompleted);
            }
            this.InvokeAsync("ScrollTextGet", new object[] {
                        legal}, this.ScrollTextGetOperationCompleted, userState);
        }
        
        private void OnScrollTextGetOperationCompleted(object arg) {
            if ((this.ScrollTextGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrollTextGetCompleted(this, new ScrollTextGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScrollTextChange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ScrollTextChange(string tag, string val, string legal) {
            object[] results = this.Invoke("ScrollTextChange", new object[] {
                        tag,
                        val,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ScrollTextChangeAsync(string tag, string val, string legal) {
            this.ScrollTextChangeAsync(tag, val, legal, null);
        }
        
        /// <remarks/>
        public void ScrollTextChangeAsync(string tag, string val, string legal, object userState) {
            if ((this.ScrollTextChangeOperationCompleted == null)) {
                this.ScrollTextChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrollTextChangeOperationCompleted);
            }
            this.InvokeAsync("ScrollTextChange", new object[] {
                        tag,
                        val,
                        legal}, this.ScrollTextChangeOperationCompleted, userState);
        }
        
        private void OnScrollTextChangeOperationCompleted(object arg) {
            if ((this.ScrollTextChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrollTextChangeCompleted(this, new ScrollTextChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogoUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LogoUpload(string lang, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] logo, string legal) {
            object[] results = this.Invoke("LogoUpload", new object[] {
                        lang,
                        logo,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogoUploadAsync(string lang, byte[] logo, string legal) {
            this.LogoUploadAsync(lang, logo, legal, null);
        }
        
        /// <remarks/>
        public void LogoUploadAsync(string lang, byte[] logo, string legal, object userState) {
            if ((this.LogoUploadOperationCompleted == null)) {
                this.LogoUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoUploadOperationCompleted);
            }
            this.InvokeAsync("LogoUpload", new object[] {
                        lang,
                        logo,
                        legal}, this.LogoUploadOperationCompleted, userState);
        }
        
        private void OnLogoUploadOperationCompleted(object arg) {
            if ((this.LogoUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoUploadCompleted(this, new LogoUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogoDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] LogoDownload(string legal) {
            object[] results = this.Invoke("LogoDownload", new object[] {
                        legal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void LogoDownloadAsync(string legal) {
            this.LogoDownloadAsync(legal, null);
        }
        
        /// <remarks/>
        public void LogoDownloadAsync(string legal, object userState) {
            if ((this.LogoDownloadOperationCompleted == null)) {
                this.LogoDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoDownloadOperationCompleted);
            }
            this.InvokeAsync("LogoDownload", new object[] {
                        legal}, this.LogoDownloadOperationCompleted, userState);
        }
        
        private void OnLogoDownloadOperationCompleted(object arg) {
            if ((this.LogoDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoDownloadCompleted(this, new LogoDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebsiteTitlesGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable WebsiteTitlesGet(string legal) {
            object[] results = this.Invoke("WebsiteTitlesGet", new object[] {
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void WebsiteTitlesGetAsync(string legal) {
            this.WebsiteTitlesGetAsync(legal, null);
        }
        
        /// <remarks/>
        public void WebsiteTitlesGetAsync(string legal, object userState) {
            if ((this.WebsiteTitlesGetOperationCompleted == null)) {
                this.WebsiteTitlesGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebsiteTitlesGetOperationCompleted);
            }
            this.InvokeAsync("WebsiteTitlesGet", new object[] {
                        legal}, this.WebsiteTitlesGetOperationCompleted, userState);
        }
        
        private void OnWebsiteTitlesGetOperationCompleted(object arg) {
            if ((this.WebsiteTitlesGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebsiteTitlesGetCompleted(this, new WebsiteTitlesGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebsiteTitlesChange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WebsiteTitlesChange(string tag, string val, string legal) {
            object[] results = this.Invoke("WebsiteTitlesChange", new object[] {
                        tag,
                        val,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WebsiteTitlesChangeAsync(string tag, string val, string legal) {
            this.WebsiteTitlesChangeAsync(tag, val, legal, null);
        }
        
        /// <remarks/>
        public void WebsiteTitlesChangeAsync(string tag, string val, string legal, object userState) {
            if ((this.WebsiteTitlesChangeOperationCompleted == null)) {
                this.WebsiteTitlesChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWebsiteTitlesChangeOperationCompleted);
            }
            this.InvokeAsync("WebsiteTitlesChange", new object[] {
                        tag,
                        val,
                        legal}, this.WebsiteTitlesChangeOperationCompleted, userState);
        }
        
        private void OnWebsiteTitlesChangeOperationCompleted(object arg) {
            if ((this.WebsiteTitlesChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WebsiteTitlesChangeCompleted(this, new WebsiteTitlesChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GoogleAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GoogleAll(string legal) {
            object[] results = this.Invoke("GoogleAll", new object[] {
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GoogleAllAsync(string legal) {
            this.GoogleAllAsync(legal, null);
        }
        
        /// <remarks/>
        public void GoogleAllAsync(string legal, object userState) {
            if ((this.GoogleAllOperationCompleted == null)) {
                this.GoogleAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGoogleAllOperationCompleted);
            }
            this.InvokeAsync("GoogleAll", new object[] {
                        legal}, this.GoogleAllOperationCompleted, userState);
        }
        
        private void OnGoogleAllOperationCompleted(object arg) {
            if ((this.GoogleAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GoogleAllCompleted(this, new GoogleAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GoogleAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GoogleAdd(string mailbox, string legal) {
            object[] results = this.Invoke("GoogleAdd", new object[] {
                        mailbox,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GoogleAddAsync(string mailbox, string legal) {
            this.GoogleAddAsync(mailbox, legal, null);
        }
        
        /// <remarks/>
        public void GoogleAddAsync(string mailbox, string legal, object userState) {
            if ((this.GoogleAddOperationCompleted == null)) {
                this.GoogleAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGoogleAddOperationCompleted);
            }
            this.InvokeAsync("GoogleAdd", new object[] {
                        mailbox,
                        legal}, this.GoogleAddOperationCompleted, userState);
        }
        
        private void OnGoogleAddOperationCompleted(object arg) {
            if ((this.GoogleAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GoogleAddCompleted(this, new GoogleAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GoogleEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GoogleEdit(string mailbox, string newMailbox, string legal) {
            object[] results = this.Invoke("GoogleEdit", new object[] {
                        mailbox,
                        newMailbox,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GoogleEditAsync(string mailbox, string newMailbox, string legal) {
            this.GoogleEditAsync(mailbox, newMailbox, legal, null);
        }
        
        /// <remarks/>
        public void GoogleEditAsync(string mailbox, string newMailbox, string legal, object userState) {
            if ((this.GoogleEditOperationCompleted == null)) {
                this.GoogleEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGoogleEditOperationCompleted);
            }
            this.InvokeAsync("GoogleEdit", new object[] {
                        mailbox,
                        newMailbox,
                        legal}, this.GoogleEditOperationCompleted, userState);
        }
        
        private void OnGoogleEditOperationCompleted(object arg) {
            if ((this.GoogleEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GoogleEditCompleted(this, new GoogleEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GoogleErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GoogleErase(string mailbox, string legal) {
            object[] results = this.Invoke("GoogleErase", new object[] {
                        mailbox,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GoogleEraseAsync(string mailbox, string legal) {
            this.GoogleEraseAsync(mailbox, legal, null);
        }
        
        /// <remarks/>
        public void GoogleEraseAsync(string mailbox, string legal, object userState) {
            if ((this.GoogleEraseOperationCompleted == null)) {
                this.GoogleEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGoogleEraseOperationCompleted);
            }
            this.InvokeAsync("GoogleErase", new object[] {
                        mailbox,
                        legal}, this.GoogleEraseOperationCompleted, userState);
        }
        
        private void OnGoogleEraseOperationCompleted(object arg) {
            if ((this.GoogleEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GoogleEraseCompleted(this, new GoogleEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LayoutWrite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LayoutWrite(string layout, string legal) {
            object[] results = this.Invoke("LayoutWrite", new object[] {
                        layout,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LayoutWriteAsync(string layout, string legal) {
            this.LayoutWriteAsync(layout, legal, null);
        }
        
        /// <remarks/>
        public void LayoutWriteAsync(string layout, string legal, object userState) {
            if ((this.LayoutWriteOperationCompleted == null)) {
                this.LayoutWriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLayoutWriteOperationCompleted);
            }
            this.InvokeAsync("LayoutWrite", new object[] {
                        layout,
                        legal}, this.LayoutWriteOperationCompleted, userState);
        }
        
        private void OnLayoutWriteOperationCompleted(object arg) {
            if ((this.LayoutWriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LayoutWriteCompleted(this, new LayoutWriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void MasterSetLegalCompletedEventHandler(object sender, MasterSetLegalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterSetLegalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterSetLegalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void MasterSetDaysLeftCompletedEventHandler(object sender, MasterSetDaysLeftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterSetDaysLeftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterSetDaysLeftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void MasterFileUploadCompletedEventHandler(object sender, MasterFileUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterFileUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterFileUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void MasterFileDownloadCompletedEventHandler(object sender, MasterFileDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterFileDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterFileDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void MasterFileDownloadIsFoundCompletedEventHandler(object sender, MasterFileDownloadIsFoundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterFileDownloadIsFoundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterFileDownloadIsFoundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AdminPwSetCompletedEventHandler(object sender, AdminPwSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdminPwSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdminPwSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AdminPwGetCompletedEventHandler(object sender, AdminPwGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdminPwGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdminPwGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CleanAndRepairCompletedEventHandler(object sender, CleanAndRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanAndRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanAndRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PreferencesGetCompletedEventHandler(object sender, PreferencesGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreferencesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreferencesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void PreferencesSetCompletedEventHandler(object sender, PreferencesSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreferencesSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreferencesSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesAllTreesCompletedEventHandler(object sender, NodesAllTreesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesAllTreesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesAllTreesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesAllCompletedEventHandler(object sender, NodesAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesAddCompletedEventHandler(object sender, NodesAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesEditCompletedEventHandler(object sender, NodesEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesEraseCompletedEventHandler(object sender, NodesEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NodesChangeIndexCompletedEventHandler(object sender, NodesChangeIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesChangeIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesChangeIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ServerPageGetCompletedEventHandler(object sender, ServerPageGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServerPageGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServerPageGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ServerPageSetCompletedEventHandler(object sender, ServerPageSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServerPageSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServerPageSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryCatchChangesCompletedEventHandler(object sender, GalleryCatchChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryCatchChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryCatchChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryImagesListCompletedEventHandler(object sender, GalleryImagesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryImagesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryImagesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryImagesDataCompletedEventHandler(object sender, GalleryImagesDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryImagesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryImagesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ContactListCompletedEventHandler(object sender, ContactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ContactListCatchChangesCompletedEventHandler(object sender, ContactListCatchChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactListCatchChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactListCatchChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NewsAllCompletedEventHandler(object sender, NewsAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NewsAddCompletedEventHandler(object sender, NewsAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NewsSetArchiveCompletedEventHandler(object sender, NewsSetArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsSetArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsSetArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NewsEraseCompletedEventHandler(object sender, NewsEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NewsEditGetCompletedEventHandler(object sender, NewsEditGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsEditGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsEditGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NewsEditGetImageNameCompletedEventHandler(object sender, NewsEditGetImageNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsEditGetImageNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsEditGetImageNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void NewsEditSetCompletedEventHandler(object sender, NewsEditSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsEditSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsEditSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryDefAllTablesCompletedEventHandler(object sender, GalleryDefAllTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefAllTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefAllTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryDefAllCompletedEventHandler(object sender, GalleryDefAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryDefAddCompletedEventHandler(object sender, GalleryDefAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryDefEditCompletedEventHandler(object sender, GalleryDefEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GalleryDefEraseCompletedEventHandler(object sender, GalleryDefEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FileUploadCompletedEventHandler(object sender, FileUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FileDownloadCompletedEventHandler(object sender, FileDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FileIsFoundOnServerCompletedEventHandler(object sender, FileIsFoundOnServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileIsFoundOnServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileIsFoundOnServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FileRenameCompletedEventHandler(object sender, FileRenameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileRenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileRenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FileEraseCompletedEventHandler(object sender, FileEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FilesListServerCompletedEventHandler(object sender, FilesListServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilesListServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilesListServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ReportsPagesViewCountCompletedEventHandler(object sender, ReportsPagesViewCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportsPagesViewCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportsPagesViewCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ReportsGalleriesViewCountCompletedEventHandler(object sender, ReportsGalleriesViewCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportsGalleriesViewCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportsGalleriesViewCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FLVUploadCompletedEventHandler(object sender, FLVUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FLVUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FLVUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CalendarAllCompletedEventHandler(object sender, CalendarAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalendarAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalendarAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CalendarAddCompletedEventHandler(object sender, CalendarAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalendarAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalendarAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CalendarGetBodyCompletedEventHandler(object sender, CalendarGetBodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalendarGetBodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalendarGetBodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CalendarEditCompletedEventHandler(object sender, CalendarEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalendarEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalendarEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CalendarEraseCompletedEventHandler(object sender, CalendarEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalendarEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalendarEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void WatermarkStatusGetCompletedEventHandler(object sender, WatermarkStatusGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WatermarkStatusGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WatermarkStatusGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void WatermarkStatusSetCompletedEventHandler(object sender, WatermarkStatusSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WatermarkStatusSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WatermarkStatusSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SpecRightClickGetCompletedEventHandler(object sender, SpecRightClickGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecRightClickGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecRightClickGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SpecRightClickSetCompletedEventHandler(object sender, SpecRightClickSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecRightClickSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecRightClickSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ScrollTextGetCompletedEventHandler(object sender, ScrollTextGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrollTextGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrollTextGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ScrollTextChangeCompletedEventHandler(object sender, ScrollTextChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrollTextChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrollTextChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LogoUploadCompletedEventHandler(object sender, LogoUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LogoDownloadCompletedEventHandler(object sender, LogoDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void WebsiteTitlesGetCompletedEventHandler(object sender, WebsiteTitlesGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebsiteTitlesGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebsiteTitlesGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void WebsiteTitlesChangeCompletedEventHandler(object sender, WebsiteTitlesChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebsiteTitlesChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WebsiteTitlesChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GoogleAllCompletedEventHandler(object sender, GoogleAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GoogleAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GoogleAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GoogleAddCompletedEventHandler(object sender, GoogleAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GoogleAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GoogleAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GoogleEditCompletedEventHandler(object sender, GoogleEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GoogleEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GoogleEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GoogleEraseCompletedEventHandler(object sender, GoogleEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GoogleEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GoogleEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LayoutWriteCompletedEventHandler(object sender, LayoutWriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LayoutWriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LayoutWriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591