//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace Mac_CMS_X_krchhto_Legal_Changer.krchhto {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ManagementSoap", Namespace="http://tempuri.org/")]
    public partial class Management : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MasterSetLegalOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterSetDaysLeftOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterFileUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterFileDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback MasterFileDownloadIsFoundOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAdminPwOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdminPwOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanAndRepairOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesAllTreesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback NodesEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetServerPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryCatchChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryImagesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryImagesDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactListCatchChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsSetArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsEditGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsEditGetImageNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewsEditSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefAllTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GalleryDefEraseOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsServerFileFoundOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback EraseFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServerFilesListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Management() {
            this.Url = global::Mac_CMS_X_krchhto_Legal_Changer.Properties.Settings.Default.Mac_CMS_X_krchhto_Legal_Changer_krchhto_Management;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MasterSetLegalCompletedEventHandler MasterSetLegalCompleted;
        
        /// <remarks/>
        public event MasterSetDaysLeftCompletedEventHandler MasterSetDaysLeftCompleted;
        
        /// <remarks/>
        public event MasterFileUploadCompletedEventHandler MasterFileUploadCompleted;
        
        /// <remarks/>
        public event MasterFileDownloadCompletedEventHandler MasterFileDownloadCompleted;
        
        /// <remarks/>
        public event MasterFileDownloadIsFoundCompletedEventHandler MasterFileDownloadIsFoundCompleted;
        
        /// <remarks/>
        public event SetAdminPwCompletedEventHandler SetAdminPwCompleted;
        
        /// <remarks/>
        public event GetAdminPwCompletedEventHandler GetAdminPwCompleted;
        
        /// <remarks/>
        public event CleanAndRepairCompletedEventHandler CleanAndRepairCompleted;
        
        /// <remarks/>
        public event GetPreferencesCompletedEventHandler GetPreferencesCompleted;
        
        /// <remarks/>
        public event SetPreferencesCompletedEventHandler SetPreferencesCompleted;
        
        /// <remarks/>
        public event NodesAllTreesCompletedEventHandler NodesAllTreesCompleted;
        
        /// <remarks/>
        public event NodesAllCompletedEventHandler NodesAllCompleted;
        
        /// <remarks/>
        public event NodesAddCompletedEventHandler NodesAddCompleted;
        
        /// <remarks/>
        public event NodesEditCompletedEventHandler NodesEditCompleted;
        
        /// <remarks/>
        public event NodesEraseCompletedEventHandler NodesEraseCompleted;
        
        /// <remarks/>
        public event GetServerPageCompletedEventHandler GetServerPageCompleted;
        
        /// <remarks/>
        public event SetServerPageCompletedEventHandler SetServerPageCompleted;
        
        /// <remarks/>
        public event GalleryCatchChangesCompletedEventHandler GalleryCatchChangesCompleted;
        
        /// <remarks/>
        public event GalleryImagesListCompletedEventHandler GalleryImagesListCompleted;
        
        /// <remarks/>
        public event GalleryImagesDataCompletedEventHandler GalleryImagesDataCompleted;
        
        /// <remarks/>
        public event ContactListCompletedEventHandler ContactListCompleted;
        
        /// <remarks/>
        public event ContactListCatchChangesCompletedEventHandler ContactListCatchChangesCompleted;
        
        /// <remarks/>
        public event NewsAllCompletedEventHandler NewsAllCompleted;
        
        /// <remarks/>
        public event NewsAddCompletedEventHandler NewsAddCompleted;
        
        /// <remarks/>
        public event NewsSetArchiveCompletedEventHandler NewsSetArchiveCompleted;
        
        /// <remarks/>
        public event NewsEraseCompletedEventHandler NewsEraseCompleted;
        
        /// <remarks/>
        public event NewsEditGetCompletedEventHandler NewsEditGetCompleted;
        
        /// <remarks/>
        public event NewsEditGetImageNameCompletedEventHandler NewsEditGetImageNameCompleted;
        
        /// <remarks/>
        public event NewsEditSetCompletedEventHandler NewsEditSetCompleted;
        
        /// <remarks/>
        public event GalleryDefAllTablesCompletedEventHandler GalleryDefAllTablesCompleted;
        
        /// <remarks/>
        public event GalleryDefAllCompletedEventHandler GalleryDefAllCompleted;
        
        /// <remarks/>
        public event GalleryDefAddCompletedEventHandler GalleryDefAddCompleted;
        
        /// <remarks/>
        public event GalleryDefEditCompletedEventHandler GalleryDefEditCompleted;
        
        /// <remarks/>
        public event GalleryDefEraseCompletedEventHandler GalleryDefEraseCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event DownloadFileCompletedEventHandler DownloadFileCompleted;
        
        /// <remarks/>
        public event IsServerFileFoundCompletedEventHandler IsServerFileFoundCompleted;
        
        /// <remarks/>
        public event RenameFileCompletedEventHandler RenameFileCompleted;
        
        /// <remarks/>
        public event EraseFileCompletedEventHandler EraseFileCompleted;
        
        /// <remarks/>
        public event ServerFilesListCompletedEventHandler ServerFilesListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterSetLegal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MasterSetLegal(string oldLegal, string newLegal) {
            object[] results = this.Invoke("MasterSetLegal", new object[] {
                        oldLegal,
                        newLegal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MasterSetLegalAsync(string oldLegal, string newLegal) {
            this.MasterSetLegalAsync(oldLegal, newLegal, null);
        }
        
        /// <remarks/>
        public void MasterSetLegalAsync(string oldLegal, string newLegal, object userState) {
            if ((this.MasterSetLegalOperationCompleted == null)) {
                this.MasterSetLegalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterSetLegalOperationCompleted);
            }
            this.InvokeAsync("MasterSetLegal", new object[] {
                        oldLegal,
                        newLegal}, this.MasterSetLegalOperationCompleted, userState);
        }
        
        private void OnMasterSetLegalOperationCompleted(object arg) {
            if ((this.MasterSetLegalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterSetLegalCompleted(this, new MasterSetLegalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterSetDaysLeft", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MasterSetDaysLeft(string count, string legal) {
            object[] results = this.Invoke("MasterSetDaysLeft", new object[] {
                        count,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MasterSetDaysLeftAsync(string count, string legal) {
            this.MasterSetDaysLeftAsync(count, legal, null);
        }
        
        /// <remarks/>
        public void MasterSetDaysLeftAsync(string count, string legal, object userState) {
            if ((this.MasterSetDaysLeftOperationCompleted == null)) {
                this.MasterSetDaysLeftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterSetDaysLeftOperationCompleted);
            }
            this.InvokeAsync("MasterSetDaysLeft", new object[] {
                        count,
                        legal}, this.MasterSetDaysLeftOperationCompleted, userState);
        }
        
        private void OnMasterSetDaysLeftOperationCompleted(object arg) {
            if ((this.MasterSetDaysLeftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterSetDaysLeftCompleted(this, new MasterSetDaysLeftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterFileUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MasterFileUpload([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, string name, string legal) {
            object[] results = this.Invoke("MasterFileUpload", new object[] {
                        buffer,
                        name,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MasterFileUploadAsync(byte[] buffer, string name, string legal) {
            this.MasterFileUploadAsync(buffer, name, legal, null);
        }
        
        /// <remarks/>
        public void MasterFileUploadAsync(byte[] buffer, string name, string legal, object userState) {
            if ((this.MasterFileUploadOperationCompleted == null)) {
                this.MasterFileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterFileUploadOperationCompleted);
            }
            this.InvokeAsync("MasterFileUpload", new object[] {
                        buffer,
                        name,
                        legal}, this.MasterFileUploadOperationCompleted, userState);
        }
        
        private void OnMasterFileUploadOperationCompleted(object arg) {
            if ((this.MasterFileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterFileUploadCompleted(this, new MasterFileUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterFileDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] MasterFileDownload(string name, string legal) {
            object[] results = this.Invoke("MasterFileDownload", new object[] {
                        name,
                        legal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void MasterFileDownloadAsync(string name, string legal) {
            this.MasterFileDownloadAsync(name, legal, null);
        }
        
        /// <remarks/>
        public void MasterFileDownloadAsync(string name, string legal, object userState) {
            if ((this.MasterFileDownloadOperationCompleted == null)) {
                this.MasterFileDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterFileDownloadOperationCompleted);
            }
            this.InvokeAsync("MasterFileDownload", new object[] {
                        name,
                        legal}, this.MasterFileDownloadOperationCompleted, userState);
        }
        
        private void OnMasterFileDownloadOperationCompleted(object arg) {
            if ((this.MasterFileDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterFileDownloadCompleted(this, new MasterFileDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MasterFileDownloadIsFound", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MasterFileDownloadIsFound(string name, string legal) {
            object[] results = this.Invoke("MasterFileDownloadIsFound", new object[] {
                        name,
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MasterFileDownloadIsFoundAsync(string name, string legal) {
            this.MasterFileDownloadIsFoundAsync(name, legal, null);
        }
        
        /// <remarks/>
        public void MasterFileDownloadIsFoundAsync(string name, string legal, object userState) {
            if ((this.MasterFileDownloadIsFoundOperationCompleted == null)) {
                this.MasterFileDownloadIsFoundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMasterFileDownloadIsFoundOperationCompleted);
            }
            this.InvokeAsync("MasterFileDownloadIsFound", new object[] {
                        name,
                        legal}, this.MasterFileDownloadIsFoundOperationCompleted, userState);
        }
        
        private void OnMasterFileDownloadIsFoundOperationCompleted(object arg) {
            if ((this.MasterFileDownloadIsFoundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MasterFileDownloadIsFoundCompleted(this, new MasterFileDownloadIsFoundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAdminPw", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetAdminPw(string pw, string npw, string legal) {
            object[] results = this.Invoke("SetAdminPw", new object[] {
                        pw,
                        npw,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetAdminPwAsync(string pw, string npw, string legal) {
            this.SetAdminPwAsync(pw, npw, legal, null);
        }
        
        /// <remarks/>
        public void SetAdminPwAsync(string pw, string npw, string legal, object userState) {
            if ((this.SetAdminPwOperationCompleted == null)) {
                this.SetAdminPwOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAdminPwOperationCompleted);
            }
            this.InvokeAsync("SetAdminPw", new object[] {
                        pw,
                        npw,
                        legal}, this.SetAdminPwOperationCompleted, userState);
        }
        
        private void OnSetAdminPwOperationCompleted(object arg) {
            if ((this.SetAdminPwCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAdminPwCompleted(this, new SetAdminPwCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdminPw", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAdminPw(string legal) {
            object[] results = this.Invoke("GetAdminPw", new object[] {
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdminPwAsync(string legal) {
            this.GetAdminPwAsync(legal, null);
        }
        
        /// <remarks/>
        public void GetAdminPwAsync(string legal, object userState) {
            if ((this.GetAdminPwOperationCompleted == null)) {
                this.GetAdminPwOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdminPwOperationCompleted);
            }
            this.InvokeAsync("GetAdminPw", new object[] {
                        legal}, this.GetAdminPwOperationCompleted, userState);
        }
        
        private void OnGetAdminPwOperationCompleted(object arg) {
            if ((this.GetAdminPwCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdminPwCompleted(this, new GetAdminPwCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CleanAndRepair", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CleanAndRepair(string legal) {
            object[] results = this.Invoke("CleanAndRepair", new object[] {
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CleanAndRepairAsync(string legal) {
            this.CleanAndRepairAsync(legal, null);
        }
        
        /// <remarks/>
        public void CleanAndRepairAsync(string legal, object userState) {
            if ((this.CleanAndRepairOperationCompleted == null)) {
                this.CleanAndRepairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanAndRepairOperationCompleted);
            }
            this.InvokeAsync("CleanAndRepair", new object[] {
                        legal}, this.CleanAndRepairOperationCompleted, userState);
        }
        
        private void OnCleanAndRepairOperationCompleted(object arg) {
            if ((this.CleanAndRepairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanAndRepairCompleted(this, new CleanAndRepairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPreferences", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPreferences(string legal) {
            object[] results = this.Invoke("GetPreferences", new object[] {
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreferencesAsync(string legal) {
            this.GetPreferencesAsync(legal, null);
        }
        
        /// <remarks/>
        public void GetPreferencesAsync(string legal, object userState) {
            if ((this.GetPreferencesOperationCompleted == null)) {
                this.GetPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreferencesOperationCompleted);
            }
            this.InvokeAsync("GetPreferences", new object[] {
                        legal}, this.GetPreferencesOperationCompleted, userState);
        }
        
        private void OnGetPreferencesOperationCompleted(object arg) {
            if ((this.GetPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreferencesCompleted(this, new GetPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPreferences", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetPreferences(string tag, string val, string legal) {
            object[] results = this.Invoke("SetPreferences", new object[] {
                        tag,
                        val,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetPreferencesAsync(string tag, string val, string legal) {
            this.SetPreferencesAsync(tag, val, legal, null);
        }
        
        /// <remarks/>
        public void SetPreferencesAsync(string tag, string val, string legal, object userState) {
            if ((this.SetPreferencesOperationCompleted == null)) {
                this.SetPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPreferencesOperationCompleted);
            }
            this.InvokeAsync("SetPreferences", new object[] {
                        tag,
                        val,
                        legal}, this.SetPreferencesOperationCompleted, userState);
        }
        
        private void OnSetPreferencesOperationCompleted(object arg) {
            if ((this.SetPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPreferencesCompleted(this, new SetPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesAllTrees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet NodesAllTrees(string legal) {
            object[] results = this.Invoke("NodesAllTrees", new object[] {
                        legal});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void NodesAllTreesAsync(string legal) {
            this.NodesAllTreesAsync(legal, null);
        }
        
        /// <remarks/>
        public void NodesAllTreesAsync(string legal, object userState) {
            if ((this.NodesAllTreesOperationCompleted == null)) {
                this.NodesAllTreesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesAllTreesOperationCompleted);
            }
            this.InvokeAsync("NodesAllTrees", new object[] {
                        legal}, this.NodesAllTreesOperationCompleted, userState);
        }
        
        private void OnNodesAllTreesOperationCompleted(object arg) {
            if ((this.NodesAllTreesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesAllTreesCompleted(this, new NodesAllTreesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable NodesAll(string tbl, string legal) {
            object[] results = this.Invoke("NodesAll", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void NodesAllAsync(string tbl, string legal) {
            this.NodesAllAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesAllAsync(string tbl, string legal, object userState) {
            if ((this.NodesAllOperationCompleted == null)) {
                this.NodesAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesAllOperationCompleted);
            }
            this.InvokeAsync("NodesAll", new object[] {
                        tbl,
                        legal}, this.NodesAllOperationCompleted, userState);
        }
        
        private void OnNodesAllOperationCompleted(object arg) {
            if ((this.NodesAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesAllCompleted(this, new NodesAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesAdd(string node, string parent, string fullPath, string tbl, string legal) {
            object[] results = this.Invoke("NodesAdd", new object[] {
                        node,
                        parent,
                        fullPath,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesAddAsync(string node, string parent, string fullPath, string tbl, string legal) {
            this.NodesAddAsync(node, parent, fullPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesAddAsync(string node, string parent, string fullPath, string tbl, string legal, object userState) {
            if ((this.NodesAddOperationCompleted == null)) {
                this.NodesAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesAddOperationCompleted);
            }
            this.InvokeAsync("NodesAdd", new object[] {
                        node,
                        parent,
                        fullPath,
                        tbl,
                        legal}, this.NodesAddOperationCompleted, userState);
        }
        
        private void OnNodesAddOperationCompleted(object arg) {
            if ((this.NodesAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesAddCompleted(this, new NodesAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesEdit(string node, string newNode, string fullPath, string newFullPath, string tbl, string legal) {
            object[] results = this.Invoke("NodesEdit", new object[] {
                        node,
                        newNode,
                        fullPath,
                        newFullPath,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesEditAsync(string node, string newNode, string fullPath, string newFullPath, string tbl, string legal) {
            this.NodesEditAsync(node, newNode, fullPath, newFullPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesEditAsync(string node, string newNode, string fullPath, string newFullPath, string tbl, string legal, object userState) {
            if ((this.NodesEditOperationCompleted == null)) {
                this.NodesEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesEditOperationCompleted);
            }
            this.InvokeAsync("NodesEdit", new object[] {
                        node,
                        newNode,
                        fullPath,
                        newFullPath,
                        tbl,
                        legal}, this.NodesEditOperationCompleted, userState);
        }
        
        private void OnNodesEditOperationCompleted(object arg) {
            if ((this.NodesEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesEditCompleted(this, new NodesEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NodesErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NodesErase(string fullPath, string tbl, string legal) {
            object[] results = this.Invoke("NodesErase", new object[] {
                        fullPath,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NodesEraseAsync(string fullPath, string tbl, string legal) {
            this.NodesEraseAsync(fullPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void NodesEraseAsync(string fullPath, string tbl, string legal, object userState) {
            if ((this.NodesEraseOperationCompleted == null)) {
                this.NodesEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNodesEraseOperationCompleted);
            }
            this.InvokeAsync("NodesErase", new object[] {
                        fullPath,
                        tbl,
                        legal}, this.NodesEraseOperationCompleted, userState);
        }
        
        private void OnNodesEraseOperationCompleted(object arg) {
            if ((this.NodesEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NodesEraseCompleted(this, new NodesEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetServerPage(string fullPath, string tbl, string legal) {
            object[] results = this.Invoke("GetServerPage", new object[] {
                        fullPath,
                        tbl,
                        legal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServerPageAsync(string fullPath, string tbl, string legal) {
            this.GetServerPageAsync(fullPath, tbl, legal, null);
        }
        
        /// <remarks/>
        public void GetServerPageAsync(string fullPath, string tbl, string legal, object userState) {
            if ((this.GetServerPageOperationCompleted == null)) {
                this.GetServerPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerPageOperationCompleted);
            }
            this.InvokeAsync("GetServerPage", new object[] {
                        fullPath,
                        tbl,
                        legal}, this.GetServerPageOperationCompleted, userState);
        }
        
        private void OnGetServerPageOperationCompleted(object arg) {
            if ((this.GetServerPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerPageCompleted(this, new GetServerPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetServerPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetServerPage(string fullPath, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] zipContents, byte[][] buffer, string[] ext, string[] ph, string tbl, string legal) {
            object[] results = this.Invoke("SetServerPage", new object[] {
                        fullPath,
                        zipContents,
                        buffer,
                        ext,
                        ph,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetServerPageAsync(string fullPath, byte[] zipContents, byte[][] buffer, string[] ext, string[] ph, string tbl, string legal) {
            this.SetServerPageAsync(fullPath, zipContents, buffer, ext, ph, tbl, legal, null);
        }
        
        /// <remarks/>
        public void SetServerPageAsync(string fullPath, byte[] zipContents, byte[][] buffer, string[] ext, string[] ph, string tbl, string legal, object userState) {
            if ((this.SetServerPageOperationCompleted == null)) {
                this.SetServerPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetServerPageOperationCompleted);
            }
            this.InvokeAsync("SetServerPage", new object[] {
                        fullPath,
                        zipContents,
                        buffer,
                        ext,
                        ph,
                        tbl,
                        legal}, this.SetServerPageOperationCompleted, userState);
        }
        
        private void OnSetServerPageOperationCompleted(object arg) {
            if ((this.SetServerPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetServerPageCompleted(this, new SetServerPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryCatchChanges", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GalleryCatchChanges(string target, byte[][] buffer, string[] ext, string[] erasedList, string legal) {
            object[] results = this.Invoke("GalleryCatchChanges", new object[] {
                        target,
                        buffer,
                        ext,
                        erasedList,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryCatchChangesAsync(string target, byte[][] buffer, string[] ext, string[] erasedList, string legal) {
            this.GalleryCatchChangesAsync(target, buffer, ext, erasedList, legal, null);
        }
        
        /// <remarks/>
        public void GalleryCatchChangesAsync(string target, byte[][] buffer, string[] ext, string[] erasedList, string legal, object userState) {
            if ((this.GalleryCatchChangesOperationCompleted == null)) {
                this.GalleryCatchChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryCatchChangesOperationCompleted);
            }
            this.InvokeAsync("GalleryCatchChanges", new object[] {
                        target,
                        buffer,
                        ext,
                        erasedList,
                        legal}, this.GalleryCatchChangesOperationCompleted, userState);
        }
        
        private void OnGalleryCatchChangesOperationCompleted(object arg) {
            if ((this.GalleryCatchChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryCatchChangesCompleted(this, new GalleryCatchChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryImagesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GalleryImagesList(string target, string legal) {
            object[] results = this.Invoke("GalleryImagesList", new object[] {
                        target,
                        legal});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GalleryImagesListAsync(string target, string legal) {
            this.GalleryImagesListAsync(target, legal, null);
        }
        
        /// <remarks/>
        public void GalleryImagesListAsync(string target, string legal, object userState) {
            if ((this.GalleryImagesListOperationCompleted == null)) {
                this.GalleryImagesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryImagesListOperationCompleted);
            }
            this.InvokeAsync("GalleryImagesList", new object[] {
                        target,
                        legal}, this.GalleryImagesListOperationCompleted, userState);
        }
        
        private void OnGalleryImagesListOperationCompleted(object arg) {
            if ((this.GalleryImagesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryImagesListCompleted(this, new GalleryImagesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryImagesData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] GalleryImagesData(string target, string legal) {
            object[] results = this.Invoke("GalleryImagesData", new object[] {
                        target,
                        legal});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void GalleryImagesDataAsync(string target, string legal) {
            this.GalleryImagesDataAsync(target, legal, null);
        }
        
        /// <remarks/>
        public void GalleryImagesDataAsync(string target, string legal, object userState) {
            if ((this.GalleryImagesDataOperationCompleted == null)) {
                this.GalleryImagesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryImagesDataOperationCompleted);
            }
            this.InvokeAsync("GalleryImagesData", new object[] {
                        target,
                        legal}, this.GalleryImagesDataOperationCompleted, userState);
        }
        
        private void OnGalleryImagesDataOperationCompleted(object arg) {
            if ((this.GalleryImagesDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryImagesDataCompleted(this, new GalleryImagesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContactList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ContactList(string tbl, string legal) {
            object[] results = this.Invoke("ContactList", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ContactListAsync(string tbl, string legal) {
            this.ContactListAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void ContactListAsync(string tbl, string legal, object userState) {
            if ((this.ContactListOperationCompleted == null)) {
                this.ContactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactListOperationCompleted);
            }
            this.InvokeAsync("ContactList", new object[] {
                        tbl,
                        legal}, this.ContactListOperationCompleted, userState);
        }
        
        private void OnContactListOperationCompleted(object arg) {
            if ((this.ContactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactListCompleted(this, new ContactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContactListCatchChanges", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ContactListCatchChanges(string tbl, System.Data.DataTable dtList, string legal) {
            object[] results = this.Invoke("ContactListCatchChanges", new object[] {
                        tbl,
                        dtList,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ContactListCatchChangesAsync(string tbl, System.Data.DataTable dtList, string legal) {
            this.ContactListCatchChangesAsync(tbl, dtList, legal, null);
        }
        
        /// <remarks/>
        public void ContactListCatchChangesAsync(string tbl, System.Data.DataTable dtList, string legal, object userState) {
            if ((this.ContactListCatchChangesOperationCompleted == null)) {
                this.ContactListCatchChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactListCatchChangesOperationCompleted);
            }
            this.InvokeAsync("ContactListCatchChanges", new object[] {
                        tbl,
                        dtList,
                        legal}, this.ContactListCatchChangesOperationCompleted, userState);
        }
        
        private void OnContactListCatchChangesOperationCompleted(object arg) {
            if ((this.ContactListCatchChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactListCatchChangesCompleted(this, new ContactListCatchChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable NewsAll(string tbl, string legal) {
            object[] results = this.Invoke("NewsAll", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void NewsAllAsync(string tbl, string legal) {
            this.NewsAllAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void NewsAllAsync(string tbl, string legal, object userState) {
            if ((this.NewsAllOperationCompleted == null)) {
                this.NewsAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsAllOperationCompleted);
            }
            this.InvokeAsync("NewsAll", new object[] {
                        tbl,
                        legal}, this.NewsAllOperationCompleted, userState);
        }
        
        private void OnNewsAllOperationCompleted(object arg) {
            if ((this.NewsAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsAllCompleted(this, new NewsAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsAdd(string tbl, string title, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] zipContents, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, string ext, string legal) {
            object[] results = this.Invoke("NewsAdd", new object[] {
                        tbl,
                        title,
                        zipContents,
                        buffer,
                        ext,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsAddAsync(string tbl, string title, byte[] zipContents, byte[] buffer, string ext, string legal) {
            this.NewsAddAsync(tbl, title, zipContents, buffer, ext, legal, null);
        }
        
        /// <remarks/>
        public void NewsAddAsync(string tbl, string title, byte[] zipContents, byte[] buffer, string ext, string legal, object userState) {
            if ((this.NewsAddOperationCompleted == null)) {
                this.NewsAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsAddOperationCompleted);
            }
            this.InvokeAsync("NewsAdd", new object[] {
                        tbl,
                        title,
                        zipContents,
                        buffer,
                        ext,
                        legal}, this.NewsAddOperationCompleted, userState);
        }
        
        private void OnNewsAddOperationCompleted(object arg) {
            if ((this.NewsAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsAddCompleted(this, new NewsAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsSetArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsSetArchive(string tbl, int wh, string legal) {
            object[] results = this.Invoke("NewsSetArchive", new object[] {
                        tbl,
                        wh,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsSetArchiveAsync(string tbl, int wh, string legal) {
            this.NewsSetArchiveAsync(tbl, wh, legal, null);
        }
        
        /// <remarks/>
        public void NewsSetArchiveAsync(string tbl, int wh, string legal, object userState) {
            if ((this.NewsSetArchiveOperationCompleted == null)) {
                this.NewsSetArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsSetArchiveOperationCompleted);
            }
            this.InvokeAsync("NewsSetArchive", new object[] {
                        tbl,
                        wh,
                        legal}, this.NewsSetArchiveOperationCompleted, userState);
        }
        
        private void OnNewsSetArchiveOperationCompleted(object arg) {
            if ((this.NewsSetArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsSetArchiveCompleted(this, new NewsSetArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsErase(string tbl, int wh, string legal) {
            object[] results = this.Invoke("NewsErase", new object[] {
                        tbl,
                        wh,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsEraseAsync(string tbl, int wh, string legal) {
            this.NewsEraseAsync(tbl, wh, legal, null);
        }
        
        /// <remarks/>
        public void NewsEraseAsync(string tbl, int wh, string legal, object userState) {
            if ((this.NewsEraseOperationCompleted == null)) {
                this.NewsEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsEraseOperationCompleted);
            }
            this.InvokeAsync("NewsErase", new object[] {
                        tbl,
                        wh,
                        legal}, this.NewsEraseOperationCompleted, userState);
        }
        
        private void OnNewsEraseOperationCompleted(object arg) {
            if ((this.NewsEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsEraseCompleted(this, new NewsEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsEditGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] NewsEditGet(string tbl, int wh, string legal) {
            object[] results = this.Invoke("NewsEditGet", new object[] {
                        tbl,
                        wh,
                        legal});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void NewsEditGetAsync(string tbl, int wh, string legal) {
            this.NewsEditGetAsync(tbl, wh, legal, null);
        }
        
        /// <remarks/>
        public void NewsEditGetAsync(string tbl, int wh, string legal, object userState) {
            if ((this.NewsEditGetOperationCompleted == null)) {
                this.NewsEditGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsEditGetOperationCompleted);
            }
            this.InvokeAsync("NewsEditGet", new object[] {
                        tbl,
                        wh,
                        legal}, this.NewsEditGetOperationCompleted, userState);
        }
        
        private void OnNewsEditGetOperationCompleted(object arg) {
            if ((this.NewsEditGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsEditGetCompleted(this, new NewsEditGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsEditGetImageName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsEditGetImageName(string tbl, int wh, string legal) {
            object[] results = this.Invoke("NewsEditGetImageName", new object[] {
                        tbl,
                        wh,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsEditGetImageNameAsync(string tbl, int wh, string legal) {
            this.NewsEditGetImageNameAsync(tbl, wh, legal, null);
        }
        
        /// <remarks/>
        public void NewsEditGetImageNameAsync(string tbl, int wh, string legal, object userState) {
            if ((this.NewsEditGetImageNameOperationCompleted == null)) {
                this.NewsEditGetImageNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsEditGetImageNameOperationCompleted);
            }
            this.InvokeAsync("NewsEditGetImageName", new object[] {
                        tbl,
                        wh,
                        legal}, this.NewsEditGetImageNameOperationCompleted, userState);
        }
        
        private void OnNewsEditGetImageNameOperationCompleted(object arg) {
            if ((this.NewsEditGetImageNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsEditGetImageNameCompleted(this, new NewsEditGetImageNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewsEditSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewsEditSet(string tbl, int wh, string title, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] zipContents, string imageMode, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer, string ext, string legal) {
            object[] results = this.Invoke("NewsEditSet", new object[] {
                        tbl,
                        wh,
                        title,
                        zipContents,
                        imageMode,
                        buffer,
                        ext,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewsEditSetAsync(string tbl, int wh, string title, byte[] zipContents, string imageMode, byte[] buffer, string ext, string legal) {
            this.NewsEditSetAsync(tbl, wh, title, zipContents, imageMode, buffer, ext, legal, null);
        }
        
        /// <remarks/>
        public void NewsEditSetAsync(string tbl, int wh, string title, byte[] zipContents, string imageMode, byte[] buffer, string ext, string legal, object userState) {
            if ((this.NewsEditSetOperationCompleted == null)) {
                this.NewsEditSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewsEditSetOperationCompleted);
            }
            this.InvokeAsync("NewsEditSet", new object[] {
                        tbl,
                        wh,
                        title,
                        zipContents,
                        imageMode,
                        buffer,
                        ext,
                        legal}, this.NewsEditSetOperationCompleted, userState);
        }
        
        private void OnNewsEditSetOperationCompleted(object arg) {
            if ((this.NewsEditSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewsEditSetCompleted(this, new NewsEditSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefAllTables", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GalleryDefAllTables(string legal) {
            object[] results = this.Invoke("GalleryDefAllTables", new object[] {
                        legal});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefAllTablesAsync(string legal) {
            this.GalleryDefAllTablesAsync(legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefAllTablesAsync(string legal, object userState) {
            if ((this.GalleryDefAllTablesOperationCompleted == null)) {
                this.GalleryDefAllTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefAllTablesOperationCompleted);
            }
            this.InvokeAsync("GalleryDefAllTables", new object[] {
                        legal}, this.GalleryDefAllTablesOperationCompleted, userState);
        }
        
        private void OnGalleryDefAllTablesOperationCompleted(object arg) {
            if ((this.GalleryDefAllTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefAllTablesCompleted(this, new GalleryDefAllTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GalleryDefAll(string tbl, string legal) {
            object[] results = this.Invoke("GalleryDefAll", new object[] {
                        tbl,
                        legal});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefAllAsync(string tbl, string legal) {
            this.GalleryDefAllAsync(tbl, legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefAllAsync(string tbl, string legal, object userState) {
            if ((this.GalleryDefAllOperationCompleted == null)) {
                this.GalleryDefAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefAllOperationCompleted);
            }
            this.InvokeAsync("GalleryDefAll", new object[] {
                        tbl,
                        legal}, this.GalleryDefAllOperationCompleted, userState);
        }
        
        private void OnGalleryDefAllOperationCompleted(object arg) {
            if ((this.GalleryDefAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefAllCompleted(this, new GalleryDefAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GalleryDefAdd(string id, string tbl, string legal) {
            object[] results = this.Invoke("GalleryDefAdd", new object[] {
                        id,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefAddAsync(string id, string tbl, string legal) {
            this.GalleryDefAddAsync(id, tbl, legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefAddAsync(string id, string tbl, string legal, object userState) {
            if ((this.GalleryDefAddOperationCompleted == null)) {
                this.GalleryDefAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefAddOperationCompleted);
            }
            this.InvokeAsync("GalleryDefAdd", new object[] {
                        id,
                        tbl,
                        legal}, this.GalleryDefAddOperationCompleted, userState);
        }
        
        private void OnGalleryDefAddOperationCompleted(object arg) {
            if ((this.GalleryDefAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefAddCompleted(this, new GalleryDefAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefEdit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GalleryDefEdit(string id, string newID, string tbl, string legal) {
            object[] results = this.Invoke("GalleryDefEdit", new object[] {
                        id,
                        newID,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefEditAsync(string id, string newID, string tbl, string legal) {
            this.GalleryDefEditAsync(id, newID, tbl, legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefEditAsync(string id, string newID, string tbl, string legal, object userState) {
            if ((this.GalleryDefEditOperationCompleted == null)) {
                this.GalleryDefEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefEditOperationCompleted);
            }
            this.InvokeAsync("GalleryDefEdit", new object[] {
                        id,
                        newID,
                        tbl,
                        legal}, this.GalleryDefEditOperationCompleted, userState);
        }
        
        private void OnGalleryDefEditOperationCompleted(object arg) {
            if ((this.GalleryDefEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefEditCompleted(this, new GalleryDefEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GalleryDefErase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GalleryDefErase(string id, string tbl, string legal) {
            object[] results = this.Invoke("GalleryDefErase", new object[] {
                        id,
                        tbl,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GalleryDefEraseAsync(string id, string tbl, string legal) {
            this.GalleryDefEraseAsync(id, tbl, legal, null);
        }
        
        /// <remarks/>
        public void GalleryDefEraseAsync(string id, string tbl, string legal, object userState) {
            if ((this.GalleryDefEraseOperationCompleted == null)) {
                this.GalleryDefEraseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGalleryDefEraseOperationCompleted);
            }
            this.InvokeAsync("GalleryDefErase", new object[] {
                        id,
                        tbl,
                        legal}, this.GalleryDefEraseOperationCompleted, userState);
        }
        
        private void OnGalleryDefEraseOperationCompleted(object arg) {
            if ((this.GalleryDefEraseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GalleryDefEraseCompleted(this, new GalleryDefEraseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadFile(byte[][] buffer, string[] files, string legal) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        buffer,
                        files,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[][] buffer, string[] files, string legal) {
            this.UploadFileAsync(buffer, files, legal, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[][] buffer, string[] files, string legal, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        buffer,
                        files,
                        legal}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public byte[][] DownloadFile(string[] files, string legal) {
            object[] results = this.Invoke("DownloadFile", new object[] {
                        files,
                        legal});
            return ((byte[][])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string[] files, string legal) {
            this.DownloadFileAsync(files, legal, null);
        }
        
        /// <remarks/>
        public void DownloadFileAsync(string[] files, string legal, object userState) {
            if ((this.DownloadFileOperationCompleted == null)) {
                this.DownloadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileOperationCompleted);
            }
            this.InvokeAsync("DownloadFile", new object[] {
                        files,
                        legal}, this.DownloadFileOperationCompleted, userState);
        }
        
        private void OnDownloadFileOperationCompleted(object arg) {
            if ((this.DownloadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsServerFileFound", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsServerFileFound(string fileName, string legal) {
            object[] results = this.Invoke("IsServerFileFound", new object[] {
                        fileName,
                        legal});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsServerFileFoundAsync(string fileName, string legal) {
            this.IsServerFileFoundAsync(fileName, legal, null);
        }
        
        /// <remarks/>
        public void IsServerFileFoundAsync(string fileName, string legal, object userState) {
            if ((this.IsServerFileFoundOperationCompleted == null)) {
                this.IsServerFileFoundOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsServerFileFoundOperationCompleted);
            }
            this.InvokeAsync("IsServerFileFound", new object[] {
                        fileName,
                        legal}, this.IsServerFileFoundOperationCompleted, userState);
        }
        
        private void OnIsServerFileFoundOperationCompleted(object arg) {
            if ((this.IsServerFileFoundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsServerFileFoundCompleted(this, new IsServerFileFoundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RenameFile(string fileName, string newFileName, string legal) {
            object[] results = this.Invoke("RenameFile", new object[] {
                        fileName,
                        newFileName,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenameFileAsync(string fileName, string newFileName, string legal) {
            this.RenameFileAsync(fileName, newFileName, legal, null);
        }
        
        /// <remarks/>
        public void RenameFileAsync(string fileName, string newFileName, string legal, object userState) {
            if ((this.RenameFileOperationCompleted == null)) {
                this.RenameFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameFileOperationCompleted);
            }
            this.InvokeAsync("RenameFile", new object[] {
                        fileName,
                        newFileName,
                        legal}, this.RenameFileOperationCompleted, userState);
        }
        
        private void OnRenameFileOperationCompleted(object arg) {
            if ((this.RenameFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameFileCompleted(this, new RenameFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EraseFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EraseFile(string[] files, string legal) {
            object[] results = this.Invoke("EraseFile", new object[] {
                        files,
                        legal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EraseFileAsync(string[] files, string legal) {
            this.EraseFileAsync(files, legal, null);
        }
        
        /// <remarks/>
        public void EraseFileAsync(string[] files, string legal, object userState) {
            if ((this.EraseFileOperationCompleted == null)) {
                this.EraseFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEraseFileOperationCompleted);
            }
            this.InvokeAsync("EraseFile", new object[] {
                        files,
                        legal}, this.EraseFileOperationCompleted, userState);
        }
        
        private void OnEraseFileOperationCompleted(object arg) {
            if ((this.EraseFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EraseFileCompleted(this, new EraseFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ServerFilesList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] ServerFilesList(string legal) {
            object[] results = this.Invoke("ServerFilesList", new object[] {
                        legal});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void ServerFilesListAsync(string legal) {
            this.ServerFilesListAsync(legal, null);
        }
        
        /// <remarks/>
        public void ServerFilesListAsync(string legal, object userState) {
            if ((this.ServerFilesListOperationCompleted == null)) {
                this.ServerFilesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServerFilesListOperationCompleted);
            }
            this.InvokeAsync("ServerFilesList", new object[] {
                        legal}, this.ServerFilesListOperationCompleted, userState);
        }
        
        private void OnServerFilesListOperationCompleted(object arg) {
            if ((this.ServerFilesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServerFilesListCompleted(this, new ServerFilesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void MasterSetLegalCompletedEventHandler(object sender, MasterSetLegalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterSetLegalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterSetLegalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void MasterSetDaysLeftCompletedEventHandler(object sender, MasterSetDaysLeftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterSetDaysLeftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterSetDaysLeftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void MasterFileUploadCompletedEventHandler(object sender, MasterFileUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterFileUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterFileUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void MasterFileDownloadCompletedEventHandler(object sender, MasterFileDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterFileDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterFileDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void MasterFileDownloadIsFoundCompletedEventHandler(object sender, MasterFileDownloadIsFoundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterFileDownloadIsFoundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MasterFileDownloadIsFoundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SetAdminPwCompletedEventHandler(object sender, SetAdminPwCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAdminPwCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAdminPwCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAdminPwCompletedEventHandler(object sender, GetAdminPwCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdminPwCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdminPwCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CleanAndRepairCompletedEventHandler(object sender, CleanAndRepairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanAndRepairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanAndRepairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPreferencesCompletedEventHandler(object sender, GetPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SetPreferencesCompletedEventHandler(object sender, SetPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NodesAllTreesCompletedEventHandler(object sender, NodesAllTreesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesAllTreesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesAllTreesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NodesAllCompletedEventHandler(object sender, NodesAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NodesAddCompletedEventHandler(object sender, NodesAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NodesEditCompletedEventHandler(object sender, NodesEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NodesEraseCompletedEventHandler(object sender, NodesEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NodesEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NodesEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetServerPageCompletedEventHandler(object sender, GetServerPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SetServerPageCompletedEventHandler(object sender, SetServerPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetServerPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetServerPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GalleryCatchChangesCompletedEventHandler(object sender, GalleryCatchChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryCatchChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryCatchChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GalleryImagesListCompletedEventHandler(object sender, GalleryImagesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryImagesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryImagesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GalleryImagesDataCompletedEventHandler(object sender, GalleryImagesDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryImagesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryImagesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ContactListCompletedEventHandler(object sender, ContactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ContactListCatchChangesCompletedEventHandler(object sender, ContactListCatchChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactListCatchChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactListCatchChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NewsAllCompletedEventHandler(object sender, NewsAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NewsAddCompletedEventHandler(object sender, NewsAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NewsSetArchiveCompletedEventHandler(object sender, NewsSetArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsSetArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsSetArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NewsEraseCompletedEventHandler(object sender, NewsEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NewsEditGetCompletedEventHandler(object sender, NewsEditGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsEditGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsEditGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NewsEditGetImageNameCompletedEventHandler(object sender, NewsEditGetImageNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsEditGetImageNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsEditGetImageNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void NewsEditSetCompletedEventHandler(object sender, NewsEditSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewsEditSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewsEditSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GalleryDefAllTablesCompletedEventHandler(object sender, GalleryDefAllTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefAllTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefAllTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GalleryDefAllCompletedEventHandler(object sender, GalleryDefAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GalleryDefAddCompletedEventHandler(object sender, GalleryDefAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GalleryDefEditCompletedEventHandler(object sender, GalleryDefEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GalleryDefEraseCompletedEventHandler(object sender, GalleryDefEraseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GalleryDefEraseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GalleryDefEraseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DownloadFileCompletedEventHandler(object sender, DownloadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void IsServerFileFoundCompletedEventHandler(object sender, IsServerFileFoundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsServerFileFoundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsServerFileFoundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RenameFileCompletedEventHandler(object sender, RenameFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void EraseFileCompletedEventHandler(object sender, EraseFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EraseFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EraseFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ServerFilesListCompletedEventHandler(object sender, ServerFilesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServerFilesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServerFilesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591